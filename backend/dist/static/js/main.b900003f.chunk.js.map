{"version":3,"sources":["services/loginService.ts","components/LoginView.tsx","services/registerService.ts","components/RegisterView.tsx","services/searchService.ts","components/SearchPanel.tsx","components/miniComponents.tsx","components/PlaceInfoCard.tsx","services/restaurantService.ts","components/MapPanel.tsx","components/SearchView.tsx","utils/hooks.tsx","reducers/modalReducer.ts","reducers/orderReducer.ts","components/MenuPanel.tsx","services/orderService.ts","components/PlaceView.tsx","components/OrderInfoCard.tsx","components/OrderView.tsx","services/manageService.ts","components/ManagePanel.tsx","components/ManageAddList.tsx","components/ManageAddMenu.tsx","components/ManageAddRestaurantPanel.tsx","components/ManageView.tsx","components/LogoutView.tsx","App.tsx","reducers/loginReducer.ts","reportWebVitals.ts","index.tsx"],"names":["baseUrl","login","credentials","a","axios","post","headers","response","data","getToken","window","localStorage","getItem","checkToken","Authorization","logout","removeItem","storeToken","token","setItem","LoginView","setLoginToken","useState","username","setUsername","password","setPassword","errorMessage","setErrorMessage","className","onSubmit","event","preventDefault","undefined","loginService","then","res","catch","err","error","autoFocus","type","name","onChange","target","value","placeholder","required","to","registerAccount","email","RegisterView","setEmail","redirect","setRedirect","registerService","q","near","SearchPanel","lastQuery","lastLocation","query","setQuery","location","setLocation","history","useHistory","path","useLocation","useEffect","pathname","size","onClick","navigator","geolocation","getCurrentPosition","loc","push","searchService","coords","latitude","longitude","RatingStar","rating","intPart","Math","floor","decimalPart","stars","i","key","PriceSign","priceLevel","repeat","OpenUntil","openingTime","time","Date","getDay","PlaceInfoCard","restaurant","verbose","href","address","src","lat","lng","process","opening_time","keywords","join","payment","user_ratings_total","price_level","backendURL","getAllRestaurants","get","getRestaurant","id","searchRestaurantByKeywords","placeOrderAtRestaurant","order","routeToRestaurant","MapPanel","keyword","locationQuery","oldKeyword","setOldKeyword","oldLocation","setOldLocation","map","setMap","restaurants","setRestaurants","mapElement","document","getElementById","newMap","google","maps","Map","center","zoom","addListener","newCenter","getCenter","toJSON","newMarker","Marker","position","title","infowindow","InfoWindow","content","renderToString","setContent","open","close","restaurantService","mapCenter","searchBounds","LatLngBounds","Geocoder","geocode","bounds","results","status","geometry","geocodeAddress","SearchView","URLSearchParams","search","queryNear","setLocationQuery","setAddress","match","parseFloat","split","toFixed","modalReducer","state","action","description","price","orderChange","item","orderReducer","filter","length","concat","quantity","OrderModal","dispatch","useDispatch","useSelector","modal","show","setQuantity","totalPrice","handleClose","Modal","onHide","animation","Header","closeButton","Title","Body","Footer","Button","variant","defaultValue","min","max","e","parseInt","MenuItem","modalShow","MenuPanel","menu","section","items","getAllOrders","getOrder","routeToConfirmation","reduce","prevValue","currItem","PlaceView","setRestaurant","placeID","useParams","handleShow","orderService","handleOrderChange","menus","curr","itemPrice","takeaway","disabled","delivery","OrderInfoCard","footer","createTime","toLocaleString","_id","OrderView","setOrder","allOrders","setAllOrders","orderID","complete","o","toDateString","addRestaurant","businessInfo","manageRestaurant","restaurantID","restaurantOrders","updateOrderStatus","put","OrderStatusModal","updateOrder","setShow","manageService","ManagePanel","orders","setOrders","orderToUpdate","setOrderToUpdate","handleOrderStatus","imcompleteOrders","pastOrders","newOrder","ManageAddList","list","setList","options","limit","message","opt","includes","selected","setSelected","htmlFor","l","handleDelete","ManageMenu","setMenus","itemName","setItemName","itemDescription","setItemDescription","setItemPrice","m","handleDeleteItem","maxLength","rows","step","ManageAddMenu","menuName","setMenuName","handleDeleteMenu","ManageAddRestaurantPanel","handleAddRestaurant","setName","setOpeningTime","setKeywords","setPayment","setDelivery","setTakeaway","deconstructTime","timestr","handleOpenTime","day","newTime","slot","hours","deconArray","slice","s","d","checked","ManageView","manager","setManager","adding","setAdding","updatedManager","LogoutView","App","loginToken","exact","loginReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","combineReducers","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b900003f.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {credentialType} from '../utils/types';\r\n\r\n\r\nconst baseUrl = '/api/login';\r\n\r\nconst login = async (credentials: credentialType) => {\r\n  const response = await axios.post(baseUrl, credentials, {\r\n    headers: {\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n  });\r\n  return response.data;\r\n}\r\n\r\nconst logout = () => {\r\n  window.localStorage.removeItem('logintoken');\r\n}\r\n\r\nconst storeToken = (token: string) => {   \r\n  window.localStorage.setItem('logintoken', token);  \r\n}\r\n\r\nconst getToken = () => {\r\n  return window.localStorage.getItem('logintoken');\r\n}\r\n\r\nconst checkToken = async () => {\r\n  const response = await axios.post(baseUrl, {}, {\r\n    headers: {\r\n        Authorization: `bearer ${getToken()}`,\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n  });\r\n  return response.data;\r\n}\r\n\r\nexport default { login, logout, storeToken, getToken, checkToken };","import React, { ChangeEvent, FormEvent, useState } from 'react';\r\n\r\nimport loginService from '../services/loginService';\r\nimport '../css/LoginView.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction LoginView({setLoginToken}: {setLoginToken: (arg0: string)=>void}) {\r\n    const [ username, setUsername ] = useState(\"\");\r\n    const [ password, setPassword ] = useState(\"\");\r\n    const [ errorMessage, setErrorMessage ] = useState<string>();\r\n\r\n    const handleUsername = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setUsername(event.target.value);\r\n    }\r\n    const handlePassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        setErrorMessage(undefined);\r\n        loginService.login({\r\n            username,\r\n            password\r\n        }).then(res => {\r\n            loginService.storeToken(res.token);\r\n            setLoginToken(res.token);\r\n        }).catch(err => {\r\n            setErrorMessage(err.response?.data?.error || \"Something went wrong. Please try again later.\");\r\n        });\r\n    }\r\n    return (\r\n        <div className=\"login-form\">\r\n            <form onSubmit={handleSubmit} className=\"card card-body\">\r\n                <h4>Please login</h4>\r\n                {errorMessage && <div className=\"error-message p-1 m-1\">{errorMessage}</div>}\r\n                <hr/>\r\n                <div className=\"form-group\">\r\n                    <input className=\"form-control\" autoFocus type=\"text\" name=\"username\" onChange={handleUsername} placeholder=\"Username\" required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input className=\"form-control\" type=\"password\" name=\"password\" onChange={handlePassword} placeholder=\"Password\" required/>\r\n                </div>\r\n                \r\n                <button className=\"btn btn-primary\">Login</button>\r\n                <div className=\"mt-1\">New user? <Link to=\"/register\">Create an account!</Link></div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n    \r\nexport default LoginView;","import axios from 'axios';\r\n\r\n\r\nconst base_url = \"/api/register\";\r\n\r\nconst registerAccount = async (username: string, email: string, password: string) => {\r\n    return await axios.post(`${base_url}/`, {\r\n        username,\r\n        email,\r\n        password\r\n    }, {\r\n        headers: {\r\n            \"Content-type\": \"application/json\"\r\n        }\r\n    });\r\n}\r\n\r\nexport default { registerAccount };","import React, { ChangeEvent, FormEvent, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport registerService from '../services/registerService';\r\n\r\n\r\nfunction RegisterView() {\r\n    const [ username, setUsername ] = useState(\"\");\r\n    const [ email, setEmail ] = useState(\"\");\r\n    const [ password, setPassword ] = useState(\"\");\r\n    const [ redirect, setRedirect ] = useState(false);\r\n    const [ errorMessage, setErrorMessage ] = useState<string>();\r\n\r\n    const handleUsername = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setUsername(event.target.value);\r\n    }\r\n    const handleEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handlePassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        setErrorMessage(undefined);\r\n        registerService.registerAccount(username, email, password)\r\n            .then(() => {\r\n                setRedirect(true);\r\n            }).catch(err => {\r\n                setErrorMessage(err.response?.data?.error || \"Something went wrong. Please try again later.\");\r\n            });\r\n    }\r\n    if (redirect) {\r\n        return <Redirect to=\"/login\"/>\r\n    } else {\r\n        return (\r\n            <div className=\"login-form\">\r\n                <form onSubmit={handleSubmit} className=\"card card-body\">\r\n                    <h4>Please register</h4>\r\n                    {errorMessage && <div className=\"error-message p-1 m-1\">{errorMessage}</div>}\r\n                    <hr/>\r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\" autoFocus type=\"text\" name=\"username\" onChange={handleUsername} placeholder=\"Username\" required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\" type=\"email\" name=\"email\" onChange={handleEmail} placeholder=\"Email Address\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\" type=\"password\" name=\"password\" onChange={handlePassword} placeholder=\"Password\" required/>\r\n                    </div>\r\n                    {/* <div className=\"form-group\">\r\n                        <input className=\"form-control\" type=\"password\" name=\"confirmation\" onChange={handlePassword} placeholder=\"Confirm Password\" required/>\r\n                    </div> */}\r\n                    <button className=\"btn btn-primary\">Register</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n    \r\nexport default RegisterView;","const frontendURL = '/search';\r\n\r\nconst routeToSearch = (q?: string, near?: string) => {\r\n    return `${frontendURL}?q=${q}&near=${near}`;\r\n}\r\n  \r\nexport default { routeToSearch };","import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport searchService from '../services/searchService';\r\nimport { searchQueryType, locationType } from '../utils/types';\r\nimport '../css/SearchPanel.css';\r\n\r\n\r\nfunction SearchPanel({lastQuery, lastLocation}: searchQueryType) {    \r\n    const [ query, setQuery ] = useState(lastQuery || \"\");\r\n    const [ location, setLocation ] = useState(lastLocation || \"\");\r\n    const history = useHistory();\r\n    const path = useLocation();\r\n    const [ errorMessage, setErrorMessage ] = useState<string>();\r\n    \r\n    useEffect(() => {\r\n        if (lastLocation) {\r\n            setLocation(lastLocation);\r\n        }\r\n    }, [lastLocation]);\r\n\r\n    const searchCurrentLocation = (): void => {\r\n        setErrorMessage(undefined);\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((loc: locationType): void => {\r\n                history.push(searchService.routeToSearch(query, `${loc.coords.latitude},${loc.coords.longitude}`));\r\n            }, () => {\r\n                setErrorMessage(\"An error occured. Cannot find your location.\");    \r\n            });\r\n        } else {\r\n            setErrorMessage(\"Navigator unavailable. Cannot find your location.\");\r\n        }\r\n    }\r\n    const onQuery = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setQuery(event.target.value);\r\n    };\r\n    const onLocation = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setLocation(event.target.value);\r\n    };\r\n    const onSearch = (event: React.FormEvent): void => {\r\n        // Submit search event\r\n        event.preventDefault();\r\n        if (query === \"\") return;\r\n        if (location === \"\") {\r\n            searchCurrentLocation();\r\n        } else {\r\n            history.push(searchService.routeToSearch(query, `${location}`));\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className={path.pathname === '/' ? \"search-page\" : \"\"}>\r\n            <div className={`d-flex flex-column align-items-center justify-content-center ${path.pathname === '/' && \"search-panel\"}`}>\r\n            {path.pathname === '/' && <h2 className=\"search-panel-title\">Find your next meal here</h2>}\r\n            <form className=\"form-inline justify-content-center p-2\">\r\n                <div>\r\n                    <input type=\"text\" name=\"search\" value={query}\r\n                        placeholder=\"Restaurant or Cuisine\" onChange={onQuery}\r\n                        className=\"form-control mx-2 input-box\" size={50}\r\n                        required\r\n                    />\r\n                    <input type=\"text\" name=\"location\" value={location}\r\n                        placeholder=\"Location\" onChange={onLocation}\r\n                        className=\"form-control mx-2 input-box\" size={30}\r\n                    />\r\n                    <button className=\"btn btn-primary px-5 input-box\" onClick={onSearch}>Go</button>\r\n                </div>\r\n            </form>\r\n            {errorMessage && <div className=\"error-message p-1 m-1\">{errorMessage}</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n    \r\nexport default SearchPanel;","import React from 'react';\r\n\r\n\r\nexport function RatingStar({rating, className}: {\r\n                            rating:number,\r\n                            className?: string\r\n                        }) {\r\n    const intPart: number = Math.floor(rating);\r\n    const decimalPart: number = rating - intPart;\r\n    const stars: JSX.Element[] = [];\r\n    for (let i = 0; i < intPart; i++) {\r\n        stars.push(<i key={i+\"star\"} className=\"fas fa-star\"></i>);\r\n    }\r\n    if (decimalPart >= 0.75) {\r\n        stars.push(<i key=\"laststar\" className=\"fas fa-star\"></i>);\r\n    } else if (decimalPart >= 0.25) {\r\n        stars.push(<i key=\"laststar\" className=\"fas fa-star-half\"></i>);\r\n    }\r\n    return <>\r\n        <span className={className}>{rating}</span> <small className=\"text-warning\">{stars}</small>\r\n    </>;\r\n}\r\n\r\nexport function PriceSign({priceLevel, className}: {\r\n                           priceLevel: number,\r\n                           className?: string\r\n                        }) {\r\n    return <span className={className}>{\"$\".repeat(priceLevel)}</span>;\r\n}\r\n\r\nexport function OpenUntil({openingTime, className}: {\r\n                           openingTime: string[],\r\n                           className?: string\r\n                        }) {\r\n    const d = new Date().getDay();\r\n    const time = openingTime[d];\r\n    return <span className={className}>{time}</span>;\r\n}","import React from 'react';\r\nimport { restaurantType } from '../utils/types';\r\n\r\nimport { RatingStar, PriceSign, OpenUntil } from './miniComponents';\r\n\r\n\r\nfunction PlaceInfoCard({restaurant, verbose}: {restaurant: restaurantType, verbose: boolean}) {\r\n    if (verbose) {\r\n        return (\r\n            <>\r\n                <h5>Info</h5>\r\n                <h6>{restaurant.name}</h6>\r\n                <div>\r\n                    <a href={`https://www.google.ca/maps/dir//${restaurant.address}`}>\r\n                    <img src={`https://maps.googleapis.com/maps/api/staticmap?center=${restaurant.location.lat},${restaurant.location.lng}&markers=${restaurant.location.lat},${restaurant.location.lng}&zoom=13&size=286x200&key=${process.env.REACT_APP_MAP_API_KEY}`} />\r\n                    </a>\r\n                </div>\r\n                <div className=\"font-weight-bold mt-3\">Location</div>\r\n                <div>{restaurant.address}</div>\r\n                <div className=\"font-weight-bold mt-3\">Hours of Operation</div>\r\n                <div><OpenUntil openingTime={restaurant.opening_time}/></div>\r\n                <div className=\"font-weight-bold mt-3\">Cuisine</div>\r\n                <div>{restaurant.keywords ? restaurant.keywords.join(\", \") : \"Not available\"}</div>\r\n                <div className=\"font-weight-bold mt-3\">Payment Options</div>\r\n                <div>{restaurant.payment ? restaurant.payment.join(\", \") : \"Not available\"}</div>\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"p-3\">\r\n                <h6>{restaurant.name}</h6>\r\n                <RatingStar rating={restaurant.rating as number} className=\"small text-muted\"/>\r\n                <small className=\"text-muted\">({restaurant.user_ratings_total})</small> · <PriceSign priceLevel={restaurant.price_level as number} className=\"small text-muted\"/><br/>\r\n                {restaurant.keywords && <small className=\"text-muted\">{restaurant.keywords.join(\" · \")}</small>}<br/>\r\n                <small className=\"text-muted\">{restaurant.address}</small><br/>\r\n                <OpenUntil openingTime={restaurant.opening_time} className=\"small text-muted\"/><br/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlaceInfoCard;","import axios from 'axios';\r\n\r\nimport { orderItemType } from '../utils/types';\r\nimport loginService from './loginService';\r\n\r\n\r\nconst frontendURL = '/place';\r\nconst backendURL = '/api/restaurant';\r\n\r\nconst getAllRestaurants = async () => {\r\n  const response = await axios.get(backendURL, {\r\n    headers: {\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n  });\r\n  return response.data;\r\n}\r\n\r\nconst getRestaurant = async (id: string) => {\r\n  const response = await axios.get(`${backendURL}/${id}`, {\r\n      headers: {\r\n          \"Content-type\": \"application/json\"\r\n      }\r\n    });\r\n    return response.data;\r\n}\r\n\r\nconst searchRestaurantByKeywords = async (location: string, keywords: string) => {\r\n  const response = await axios.get(`${backendURL}/location/${location}/query/${keywords}`);\r\n  return response.data;\r\n}\r\n\r\nconst placeOrderAtRestaurant = async (id: string, order: orderItemType[]) => {\r\n  const response = await axios.post(`${backendURL}/${id}`, order,\r\n  {\r\n    headers: {\r\n        Authorization: `bearer ${loginService.getToken()}`,\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n  });\r\n  return response.data;\r\n}\r\n\r\nconst routeToRestaurant = (id?: string) => {\r\n  return `${frontendURL}/${id}`;\r\n}\r\n\r\nexport default { getAllRestaurants, getRestaurant, searchRestaurantByKeywords, placeOrderAtRestaurant, routeToRestaurant };","import React, { useState, useEffect } from 'react';\r\nimport { renderToString } from 'react-dom/server';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { mapLocationType, restaurantType } from '../utils/types';\r\nimport PlaceInfoCard from './PlaceInfoCard';\r\nimport restaurantService from '../services/restaurantService';\r\nimport '../css/MapPanel.css';\r\n\r\n\r\nfunction geocodeAddress(\r\n    map: google.maps.Map,\r\n    address: string,\r\n    setLocation: (arg0: mapLocationType) => void\r\n): void {\r\n    // Create boundry to limit geocode search\r\n    const mapCenter = map.getCenter();\r\n    const searchBounds = mapCenter ? new google.maps.LatLngBounds(\r\n        {lat: mapCenter.lat()-1, lng: mapCenter.lng()-1}, {lat: mapCenter.lat()+1, lng: mapCenter.lng()+1}) : undefined;\r\n    // Geocode service\r\n    const geocoder = new google.maps.Geocoder();\r\n    geocoder.geocode({ address: address, bounds: searchBounds }, (results, status) => {\r\n        if (status === \"OK\") {\r\n            setLocation(results[0].geometry.location.toJSON());\r\n        }\r\n    });\r\n}\r\n\r\nfunction MapPanel({keyword, location, locationQuery, address, setLocation} : {\r\n    keyword: string,\r\n    location?: mapLocationType,\r\n    locationQuery: string,\r\n    address: string,\r\n    setLocation: (arg0: mapLocationType)=>void;\r\n}) {\r\n    const [ oldKeyword, setOldKeyword ] = useState(\"\");\r\n    const [ oldLocation, setOldLocation ] = useState({});\r\n    const [ map, setMap ] = useState<google.maps.Map>();\r\n    const [ restaurants, setRestaurants ] = useState<restaurantType[]>([]);\r\n    const history = useHistory();\r\n    const mapElement = document.getElementById(\"map\");\r\n    const [ errorMessage, setErrorMessage ] = useState<string>();\r\n\r\n    useEffect(() => {\r\n        if (mapElement) {\r\n            const newMap = new google.maps.Map(mapElement, {\r\n                center: location,\r\n                zoom: 13,\r\n            });\r\n            google.maps.event.addListener(newMap, 'center_changed', function () {\r\n                // Everytime map center change\r\n                const newCenter = newMap.getCenter().toJSON();                \r\n                setLocation(newCenter);\r\n            });\r\n            restaurants.map(restaurant => {\r\n                const newMarker = new google.maps.Marker({\r\n                    position: restaurant.location,\r\n                    map: newMap,\r\n                    title: restaurant.name,\r\n                });\r\n                const infowindow = new google.maps.InfoWindow({\r\n                    content: \"\",\r\n                });\r\n                newMarker.addListener(\"mouseover\", () => {\r\n                    const content = renderToString((<PlaceInfoCard restaurant={restaurant} verbose={false} />));\r\n                    infowindow.setContent(content);\r\n                    infowindow.open(newMap, newMarker);\r\n                });\r\n                newMarker.addListener(\"mouseout\", () => {\r\n                    infowindow.close();\r\n                });\r\n                newMarker.addListener(\"click\", () => {\r\n                    history.push(`${restaurantService.routeToRestaurant(restaurant.id)}`);\r\n                });\r\n            });\r\n            setMap(newMap);\r\n        }\r\n    }, [mapElement, restaurants]);\r\n\r\n    useEffect(() => {\r\n        if (map && address) {\r\n            geocodeAddress(map, address, setLocation);\r\n        }\r\n    }, [map, locationQuery, address]);\r\n\r\n    // search restaurants at location\r\n    useEffect(() => {\r\n        setErrorMessage(undefined);\r\n        if (location) {\r\n            if (keyword === oldKeyword && location === oldLocation) return;\r\n            \r\n            restaurantService.searchRestaurantByKeywords(`${location.lat},${location.lng}`, keyword)\r\n                .then((res) => {\r\n                    setRestaurants(res);\r\n                    setOldKeyword(keyword);\r\n                    setOldLocation(location);\r\n                })\r\n                .catch(err => {\r\n                    setErrorMessage(err.response?.data?.error || \"Something went wrong. Please try again later.\");\r\n                });\r\n        }\r\n    }, [locationQuery, address, keyword]);\r\n\r\n    return (\r\n        <div className=\"map-panel\">\r\n            <div id=\"searchResult\">\r\n                {errorMessage && <div className=\"error-message p-1 m-1\">{errorMessage}</div>}\r\n                <ul className=\"list-group\">\r\n                    {restaurants.map(restaurant => \r\n                    <li key={restaurant.id} className=\"list-group-item info-card p-0\">\r\n                        <Link to={restaurantService.routeToRestaurant(restaurant.id)}>\r\n                            <PlaceInfoCard restaurant={restaurant} verbose={false} />\r\n                        </Link>\r\n                    </li>)}\r\n                </ul>\r\n            </div>\r\n            <div id=\"map\" />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default MapPanel;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useQuery } from '../utils/hooks';\r\nimport { mapLocationType } from '../utils/types';\r\nimport SearchPanel from './SearchPanel';\r\nimport MapPanel from './MapPanel';\r\n\r\n\r\nfunction SearchView() {\r\n    const query = useQuery();\r\n    const keyword = query.get(\"q\") || \"\"; // keyword is just whatever is in url query\r\n    const queryNear = query.get(\"near\"); // location needs to be processed into coordinates or address\r\n\r\n    const [ location, setLocation ] = useState<mapLocationType>(); // location is used in actual query and controls map center\r\n    const [ locationQuery, setLocationQuery ] = useState<string>();\r\n    const [ address, setAddress ] = useState<string>(\"\"); // address is used to geocode incase the location query cannot be interpreted as coordinates\r\n    \r\n    useEffect(() => {\r\n        if (queryNear) {\r\n            if (queryNear.match(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$/)) {\r\n                setLocation({lat: parseFloat(queryNear.split(\",\")[0]), lng: parseFloat(queryNear.split(\",\")[1])});\r\n                setLocationQuery(queryNear);\r\n                setAddress(\"\");\r\n            } else {\r\n                setAddress(queryNear);\r\n                setLocation(undefined);\r\n                setLocationQuery(undefined);\r\n            }\r\n        } else {\r\n            setLocation(undefined);\r\n        }\r\n    }, [queryNear]);\r\n\r\n    return (\r\n        <div>\r\n            <SearchPanel lastQuery={keyword} lastLocation={location ? `${location.lat.toFixed(4)},${location.lng.toFixed(4)}` : address} />\r\n            <MapPanel keyword={keyword}\r\n                location={location ? location : undefined}\r\n                locationQuery={locationQuery ? locationQuery : \"\"}\r\n                address={location ? \"\" : address}\r\n                setLocation={setLocation}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n    \r\nexport default SearchView;","import { useLocation } from \"react-router-dom\";\r\n\r\nexport function useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n  ","import { modalActionType } from './reducerTypes';\r\nimport { menuItemType } from '../utils/types';\r\n\r\n\r\nconst modalReducer = (state:menuItemType|null=null, action: modalActionType) => {\r\n    switch(action.type) {\r\n        case \"MODAL_SHOW\":\r\n            return {\r\n                name: action.data?.name,\r\n                description: action.data?.description,\r\n                price: action.data?.price,\r\n            } as menuItemType;\r\n        case \"MODAL_HIDE\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const modalShow = (item:menuItemType) => {\r\n    return {\r\n        type: \"MODAL_SHOW\",\r\n        data: item,\r\n    }\r\n}\r\n\r\nexport const modalHide = () => {\r\n    return {\r\n        type: \"MODAL_HIDE\",\r\n        data: null,\r\n    }\r\n}\r\n\r\nexport default modalReducer;","import { orderActionType } from './reducerTypes';\r\nimport { orderItemType } from '../utils/types';\r\n\r\n\r\nconst orderReducer = (state:orderItemType[]=[], action: orderActionType) => {\r\n    switch(action.type) {\r\n        case \"ORDER_FOOD\":\r\n            // Pile everything up in one action?\r\n            if (state.filter(item => item.name === action.data?.name).length === 0) {\r\n                return state.concat(action.data as orderItemType);\r\n            } else {\r\n                if (action.data?.quantity === 0) {\r\n                    return state.filter(item => item.name !== action.data?.name);\r\n                } else {\r\n                    return state.map(item => item.name === action.data?.name ? action.data : item);\r\n                }\r\n            }\r\n        case \"ORDER_CLEAR\":\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderChange = (item:orderItemType) => {\r\n    return {\r\n        type: \"ORDER_FOOD\",\r\n        data: item,\r\n    };\r\n}\r\n\r\nexport const orderClear = () => {\r\n    return {\r\n        type: \"ORDER_CLEAR\",\r\n    };\r\n}\r\n\r\nexport default orderReducer;","import React, { ChangeEvent, useState } from 'react';\r\nimport { menuType, menuItemType, orderItemType } from '../utils/types';\r\nimport { useSelector, useDispatch, DefaultRootState } from 'react-redux';\r\nimport { modalShow, modalHide } from '../reducers/modalReducer';\r\nimport { orderChange } from '../reducers/orderReducer';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../css/MenuPanel.css';\r\n\r\n\r\nfunction OrderModal() {\r\n    const dispatch = useDispatch();\r\n    const item = useSelector((state: {modal:DefaultRootState, order:DefaultRootState}) => state.modal as menuItemType|null);\r\n    const show = item !== null;\r\n    const [ quantity, setQuantity ] = useState(1);\r\n    const totalPrice = item ? item.price * quantity : 0;\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuantity(parseInt(e.target.value));\r\n    };\r\n    const handleClose = () => {\r\n        dispatch(modalHide());\r\n        setQuantity(1);\r\n    };\r\n    const handleAdd = () => {\r\n        if (item) {\r\n            dispatch(orderChange({\r\n                name: item.name,\r\n                price: item.price,\r\n                quantity: quantity,\r\n            } as orderItemType));\r\n        }\r\n        dispatch(modalHide());\r\n        setQuantity(1);\r\n    }\r\n    \r\n\r\n    return (<Modal show={show} onHide={handleClose} animation={false}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>Add to Order</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            {item && <div className=\"m-2\">\r\n                <h5 className=\"card-title\">{item.name}</h5>\r\n                <p className=\"card-text\">{item.description}</p>\r\n            </div>}\r\n        </Modal.Body>\r\n        <Modal.Footer className=\"justify-content-between\">\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n                Cancel\r\n            </Button>\r\n            {item && <div className=\"d-flex align-items-center\">\r\n                <span>Quantity: </span>\r\n                <input type=\"number\" defaultValue={1} min=\"1\" max=\"99\" onChange={handleChange} className=\"form-control number mx-1\"/>\r\n                <Button variant=\"outline-primary\" onClick={handleAdd} className=\"add-button\">\r\n                    ${totalPrice.toFixed(2)} Add to Order\r\n                </Button>\r\n            </div>}\r\n        </Modal.Footer>\r\n    </Modal>)\r\n}\r\n\r\nfunction MenuItem({item}: {item: menuItemType}) {\r\n    const dispatch = useDispatch();\r\n    const handleClick = () => {\r\n        dispatch(modalShow({\r\n            name: item.name,\r\n            description: item.description,\r\n            price: item.price,\r\n        }));\r\n    };\r\n    return (\r\n        <div className=\"card menu-item m-2\" onClick={handleClick}>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{item.name}</h5>\r\n                <p className=\"card-text\">{item.description}</p>\r\n                <div>${item.price}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MenuPanel({menu}: {menu: menuType[]}) {\r\n\r\n    return (\r\n        <div>\r\n            {menu.map(section => (\r\n            <div key={section.name} className=\"my-4\">\r\n                <h4>{section.name}</h4>\r\n                <div className=\"d-flex flex-wrap\">\r\n                    {section.items.map(item => (\r\n                        <MenuItem key={`${section.name}-${item.name}`}\r\n                            item={item}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            ))}\r\n            <OrderModal/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MenuPanel;","import axios from 'axios';\r\n\r\nimport loginService from './loginService';\r\nimport { orderBEType, orderItemBEType } from '../utils/types';\r\n\r\n\r\nconst frontendURL = '/order';\r\nconst backendURL = '/api/order';\r\n\r\nconst getAllOrders = async () => {\r\n    return await axios.get(`${backendURL}/`, {\r\n        headers: {\r\n            Authorization: `bearer ${loginService.getToken()}`,\r\n            \"Content-type\": \"application/json\"\r\n        }\r\n    });\r\n}\r\n\r\nconst getOrder = async (id: string) => {\r\n    return await axios.get(`${backendURL}/${id}`, {\r\n        headers: {\r\n            Authorization: `bearer ${loginService.getToken()}`,\r\n            \"Content-type\": \"application/json\"\r\n        }\r\n    });\r\n}\r\n\r\nconst routeToConfirmation = (id: string) => {\r\n    return `${frontendURL}/${id}`;\r\n}\r\n\r\nconst totalPrice = (order: orderBEType) => {\r\n    return order.items.reduce((prevValue: number, currItem: orderItemBEType) => {\r\n        return prevValue + currItem.quantity * currItem.price;\r\n    }, 0).toFixed(2);\r\n}\r\n\r\nexport default { getAllOrders, getOrder, routeToConfirmation, totalPrice };","import React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch, DefaultRootState } from 'react-redux';\r\n\r\nimport MenuPanel from \"./MenuPanel\";\r\nimport { RatingStar, PriceSign } from './miniComponents';\r\nimport { orderItemType, restaurantType } from '../utils/types';\r\nimport { orderChange, orderClear } from '../reducers/orderReducer';\r\nimport restaurantService from '../services/restaurantService';\r\nimport orderService from '../services/orderService';\r\nimport '../css/PlaceView.css';\r\nimport PlaceInfoCard from './PlaceInfoCard';\r\n\r\n\r\nfunction PlaceView() {\r\n    const [ restaurant, setRestaurant ] = useState<restaurantType>();\r\n    const { placeID }: { placeID:string } = useParams();\r\n    const order = useSelector((state: {modal:DefaultRootState, order:DefaultRootState}) => state.order as orderItemType[]);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [ errorMessage, setErrorMessage ] = useState<string>();\r\n\r\n    useEffect(() => {\r\n        setErrorMessage(undefined);\r\n        restaurantService.getRestaurant(placeID)\r\n            .then((res) => {\r\n                setRestaurant(res);\r\n            })\r\n            .catch(err => {\r\n                setErrorMessage(err.response?.data?.error || \"Something went wrong. Please try again later.\");\r\n            });\r\n    }, [placeID]);\r\n\r\n    const handleShow = () => {\r\n        setErrorMessage(undefined);\r\n        if (restaurant && restaurant.id) {\r\n            restaurantService.placeOrderAtRestaurant(restaurant.id, order)\r\n                .then(res => {\r\n                    dispatch(orderClear());\r\n                    history.push(orderService.routeToConfirmation(res.id));\r\n                })\r\n                .catch(err => {\r\n                    setErrorMessage(err.response?.data?.error || \"Something went wrong. Please try again later.\");\r\n                });\r\n        }\r\n    };\r\n\r\n    const itemPrice = (item: orderItemType) => item.price * item.quantity;\r\n    const totalPrice = (order: orderItemType[]) => {\r\n        return order.reduce((curr:number, item:orderItemType)=>curr+itemPrice(item), 0);\r\n    };\r\n    const handleOrderChange = (item: orderItemType) => {\r\n        return (e: ChangeEvent<HTMLInputElement>) => {\r\n            if (item) {\r\n                dispatch(orderChange({\r\n                    name: item.name,\r\n                    price: item.price,\r\n                    quantity: parseInt(e.target.value),\r\n                } as orderItemType));\r\n            }\r\n        }\r\n    };    \r\n\r\n    return (\r\n    <div className=\"place-view\">\r\n        {restaurant? <div className=\"place-info p-3\">\r\n            <h1 className=\"font-weight-bold\">{restaurant.name}</h1>\r\n            {errorMessage && <div className=\"error-message p-1 m-1\">{errorMessage}</div>}\r\n            <div className=\"font-weight-bold\">\r\n                {restaurant.rating && <RatingStar rating={restaurant.rating}/>} <span>{restaurant.user_ratings_total} reviews</span> · {restaurant.price_level && <PriceSign priceLevel={restaurant.price_level}/>} · <span>{restaurant.keywords.join(\" · \")}</span>\r\n            </div>\r\n            <hr/>\r\n            <MenuPanel menu={restaurant.menus}></MenuPanel>\r\n        </div> : <div>{errorMessage && <div className=\"error-message p-1 m-1\">{errorMessage}</div>}</div>}\r\n        {restaurant && <div className=\"booking-info p-3\">\r\n            <div className=\"card card-body shadow-sm rounded\">\r\n                <h5>Order</h5>\r\n                <div>\r\n                    {order.map(item => <div key={item.name}>\r\n                        <div className=\"my-1\">\r\n                            <input type=\"number\" onChange={handleOrderChange(item)}\r\n                                defaultValue={item.quantity} min={0} max={99} className=\"form-control number\"/>\r\n                            {item.name}\r\n                        </div>\r\n                    </div>)}\r\n                    <hr/>\r\n                    <div className=\"float-right\">Total: ${totalPrice(order).toFixed(2)}</div>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    {/* {business.dine_in && <button type=\"button\" onClick={handleShow} className=\"btn btn-danger mx-1\">Dine-in</button>} */}\r\n                    {restaurant.takeaway && <button type=\"button\" onClick={handleShow} disabled={order.length === 0}\r\n                        className=\"btn btn-danger px-4 mx-1\">Takeout</button>}\r\n                    {restaurant.delivery && <button type=\"button\" onClick={handleShow} disabled={order.length === 0}\r\n                        className=\"btn btn-danger px-4 mx-1\">Delivery</button>}\r\n                </div>\r\n            </div>\r\n            <div className=\"card card-body shadow-sm mt-3\">\r\n                <PlaceInfoCard restaurant={restaurant} verbose={true} />\r\n            </div>\r\n        </div>}\r\n    </div>\r\n    );\r\n}\r\n    \r\nexport default PlaceView;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { orderBEType } from '../utils/types';\r\n\r\n\r\nfunction OrderInfoCard({order, title ,footer}: {\r\n    order: orderBEType,\r\n    title: string,\r\n    footer: string\r\n}) {\r\n    \r\n    return (\r\n        <div className=\"card-body\">\r\n            <h4>{title}</h4>\r\n            <small className=\"text-muted\">Ordered at {new Date(order.createTime).toLocaleString()}</small>\r\n            <hr/>\r\n            <Link to={`/place/${order.restaurant.id}`}><h5 className=\"card-title\">{order.restaurant.name}</h5></Link>\r\n            {order.items.map(item => {\r\n                return (\r\n                    <div key={item._id}>\r\n                        <span>{item.name}</span> x <span>{item.quantity}</span> : <span>${item.price * item.quantity}</span>\r\n                    </div>\r\n                );\r\n            })}\r\n            <hr/>\r\n            <span>{footer}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderInfoCard;","import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\n\r\nimport orderService from '../services/orderService';\r\nimport { orderBEType } from '../utils/types';\r\nimport '../css/OrderView.css';\r\nimport OrderInfoCard from './OrderInfoCard';\r\n\r\n\r\nfunction OrderView() {\r\n    const [ order, setOrder ] = useState<orderBEType>();\r\n    const [ allOrders, setAllOrders ] = useState<orderBEType[]>([]);\r\n    const { orderID }: { orderID:string } = useParams();\r\n    const [ errorMessage, setErrorMessage ] = useState<string>();\r\n\r\n    useEffect(() => {\r\n        setErrorMessage(undefined);\r\n        if (orderID) {\r\n            orderService.getOrder(orderID)\r\n                .then(res => {\r\n                    setOrder(res.data);\r\n                })\r\n                .catch(err => {\r\n                    setErrorMessage(err.response?.data?.error || \"Something went wrong. Please try again later.\");\r\n                });\r\n        } else {\r\n            orderService.getAllOrders()\r\n                .then(res => {                    \r\n                    setAllOrders(res.data);\r\n                    setOrder(undefined);\r\n                })\r\n                .catch(err => {\r\n                    setErrorMessage(err.response?.data?.error || \"Something went wrong. Please try again later.\");\r\n                });\r\n        }\r\n    }, [orderID]);\r\n\r\n    return (\r\n        <div className=\"order-view p-3\">\r\n            <div></div>\r\n            <div>\r\n                {errorMessage && <div className=\"error-message p-1 m-1\">{errorMessage}</div>}\r\n                {order ?\r\n                    <div className=\"confirmation-view\">\r\n                        <div className=\"order-panel\">\r\n                            <div className=\"card\">\r\n                                <OrderInfoCard order={order} title={`Your order is ${order.complete ? \"completed\" : \"confirmed\"}!`} footer={`Total: $${orderService.totalPrice(order)}`} />\r\n                            </div>\r\n                        </div>\r\n                    </div> :\r\n                    <div>\r\n                        <h1 className=\"font-weight-bold\">Order history</h1>\r\n                        <hr/>\r\n                        <div className=\"order-panel\">\r\n                            {allOrders.length > 0 ? allOrders.map(o => (\r\n                                <Link key={o.id} to={orderService.routeToConfirmation(o.id)} className=\"card m-1\"><div>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"card-title\">\r\n                                            {o.complete ? <span className=\"badge badge-primary float-right\">Complete</span> : \r\n                                            <span className=\"badge badge-secondary float-right\">Imcomplete</span>}\r\n                                            <h4>{o.restaurant.name}</h4>\r\n                                        </div>\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <small className=\"small text-muted\">{new Date(o.createTime).toDateString()}</small>\r\n                                            <small className=\"small\">Total: ${orderService.totalPrice(o)}</small>\r\n                                        </div>\r\n                                    </div>\r\n                                </div></Link>\r\n                            )) : <div>{\"You don't have any past order at the moment\"}</div>}\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n    \r\nexport default OrderView;","import axios from 'axios';\r\n\r\nimport { restaurantType } from '../utils/types';\r\nimport loginService from './loginService';\r\n\r\n\r\nconst frontendURL = '/manage';\r\nconst backendURL = '/api/manage';\r\n\r\nconst addRestaurant = async (businessInfo: restaurantType) => {\r\n  const response = await axios.post(`${backendURL}/restaurants`, businessInfo, {\r\n    headers: {\r\n        Authorization: `bearer ${loginService.getToken()}`,\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n  });\r\n  return response.data;\r\n}\r\n\r\nconst manageRestaurant = async (restaurantID?: string) => {\r\n  const path = restaurantID ? `${backendURL}/restaurants/${restaurantID}` : backendURL;\r\n  const response = await axios.get(path, {\r\n    headers: {\r\n        Authorization: `bearer ${loginService.getToken()}`,\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n  });\r\n  return response.data;\r\n}\r\n\r\nconst restaurantOrders = async (restaurantID: string) => {\r\n  const response = await axios.get(`${backendURL}/restaurants/${restaurantID}/orders`, {\r\n    headers: {\r\n        Authorization: `bearer ${loginService.getToken()}`,\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n  });\r\n  return response.data;\r\n}\r\n\r\nconst updateOrderStatus = async (restaurantID: string, orderID: string, status: string) => {\r\n  const response = await axios.put(`${backendURL}/restaurants/${restaurantID}/orders/${orderID}`, {status}, {\r\n    headers: {\r\n        Authorization: `bearer ${loginService.getToken()}`,\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n  });\r\n  return response.data;\r\n}\r\n\r\nconst routeToRestaurant = (id?: string) => {\r\n  return `${frontendURL}/${id}`;\r\n}\r\n\r\nexport default { addRestaurant, manageRestaurant, restaurantOrders, updateOrderStatus, routeToRestaurant };","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { orderBEType, restaurantType } from '../utils/types';\r\nimport manageService from '../services/manageService';\r\nimport orderService from '../services/orderService';\r\nimport OrderInfoCard from './OrderInfoCard';\r\nimport PlaceInfoCard from './PlaceInfoCard';\r\nimport '../css/ManagePanel.css';\r\n\r\n\r\nfunction OrderStatusModal({order, setOrder, updateOrder}: {\r\n    order?: orderBEType,\r\n    setOrder: (arg0?: orderBEType) => void,\r\n    updateOrder: (arg0: orderBEType) => void\r\n}) {\r\n    const [ show, setShow ] = useState(false);\r\n    const [ errorMessage, setErrorMessage ] = useState<string>();\r\n\r\n    const handleClose = () => {\r\n        setErrorMessage(undefined);\r\n        setOrder(undefined);\r\n    }\r\n    const handleUpdate = () => {\r\n        setErrorMessage(undefined);\r\n        if (order?.restaurant.id && order?.id) {\r\n            manageService.updateOrderStatus(order.restaurant.id, order.id, \"complete\")\r\n                .then(res => {\r\n                    updateOrder(res);\r\n                    handleClose();\r\n                })\r\n                .catch(err => {\r\n                    setErrorMessage(err.response?.data?.error || \"Something went wrong. Please try again later.\");\r\n                });\r\n        } else {\r\n            handleClose();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (order) {\r\n            setShow(true);\r\n        } else {\r\n            setShow(false);\r\n        }\r\n    }, [order]);\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose} animation={false}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Order {order?.id}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {errorMessage && <div className=\"error-message p-1 m-1\">{errorMessage}</div>}\r\n                <div>Order is complete?</div>\r\n            </Modal.Body>\r\n            <Modal.Footer className=\"justify-content-between\">\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Cancel\r\n                </Button>\r\n                <Button variant=\"outline-primary\" onClick={handleUpdate} className=\"add-button\">\r\n                    Complete\r\n                </Button>\r\n                \r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nfunction ManagePanel({restaurants, placeID}: {restaurants: restaurantType[], placeID?: string}) {\r\n    const [ orders, setOrders ] = useState<orderBEType[]>([]);\r\n    const [ orderToUpdate, setOrderToUpdate ] = useState<orderBEType>();\r\n    const [ errorMessage, setErrorMessage ] = useState<string>();\r\n\r\n    const handleOrderStatus = (order: orderBEType) => {\r\n        setOrderToUpdate(order);\r\n    }\r\n\r\n    const updateOrder = (newOrder: orderBEType) => {\r\n        setOrders(orders.map(order => order.id === newOrder.id ? newOrder : order));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (placeID && restaurants.length == 1 && restaurants[0].id) {\r\n            manageService.restaurantOrders(restaurants[0].id)\r\n                .then(res => {\r\n                    setOrders(res);\r\n                })\r\n                .catch(err => {\r\n                    setErrorMessage(err.response?.data?.error || \"Something went wrong. Please try again later.\");\r\n                });\r\n        }\r\n    }, [restaurants]);\r\n\r\n    const imcompleteOrders = orders.filter(order => !order.complete);\r\n    const pastOrders =  orders.filter(order => order.complete);\r\n\r\n    return (\r\n        <>\r\n        {errorMessage && <div className=\"error-message p-1 m-1\">{errorMessage}</div>}\r\n        {restaurants.length === 0 ? <div>{\"You don't have any restaurant registered at the moment.\"}</div> :\r\n        <div className={placeID && restaurants.length === 1 ? \"manage-panel manage-panel-4\" : \"manage-panel manage-panel-3\"}>\r\n            <div className=\"p-3\">\r\n                {placeID === undefined ? <div className=\"d-flex flex-wrap\">{\r\n                    restaurants.map((restaurant) => (\r\n                    <Link to={manageService.routeToRestaurant(restaurant.id)} key={restaurant.id} className=\"manage-restaurant-link\">\r\n                    <div className=\"card manage-restaurant-card m-2\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{restaurant.name}</h5>\r\n                            <div className=\"card-text\">{restaurant.address}</div>\r\n                        </div>\r\n                    </div>\r\n                    </Link>\r\n                ))\r\n                }</div> : <div>\r\n                    <h5>Imcomplete Orders:</h5>\r\n                    {imcompleteOrders.length === 0 ? <div>No recent order</div> :\r\n                    <div className=\"mt-2\">\r\n                        {imcompleteOrders.map(order => (\r\n                            <div key={order.id} className=\"card manage-order-card m-2\" onClick={()=>handleOrderStatus(order)}>\r\n                                <OrderInfoCard order={order} title={`Order ${order.id}`} footer={`$${orderService.totalPrice(order)}`} />\r\n                            </div>\r\n                        ))}\r\n                    </div>}\r\n                    <hr/>\r\n                    <h5>Past Orders:</h5>\r\n                    {pastOrders.length === 0 ? <div>No recent order</div> :\r\n                    <div className=\"mt-2\">\r\n                        {pastOrders.map(order => (\r\n                            <div key={order.id} className=\"card manage-order-card m-2\" onClick={()=>handleOrderStatus(order)}>\r\n                                <OrderInfoCard order={order} title={`Order ${order.id}`} footer={`$${orderService.totalPrice(order)}`} />\r\n                            </div>\r\n                        ))}\r\n                    </div>}\r\n                </div>}\r\n            </div>\r\n            <div className=\"p-3\">\r\n                {placeID && restaurants.length === 1 ? <div className=\"card card-body shadow-sm\">\r\n                    <PlaceInfoCard restaurant={restaurants[0]} verbose={true} />\r\n                </div> : <div></div>}\r\n            </div>\r\n        </div>}\r\n        <OrderStatusModal order={orderToUpdate} setOrder={setOrderToUpdate} updateOrder={updateOrder} />\r\n    </>\r\n    );\r\n}\r\n    \r\nexport default ManagePanel;","import React, { useEffect, useState } from 'react';\r\n\r\nimport \"../css/ManageAddList.css\";\r\n\r\n\r\nfunction ManageAddList({list, setList, options, limit, message}: {\r\n        list: string[],\r\n        setList(arg: string[]): void,\r\n        options: string[],\r\n        message: string,\r\n        limit: number\r\n    }) {\r\n    const [ selected, setSelected ] = useState<string>(options.filter(opt => !list.includes(opt))[0]);\r\n\r\n    const handleAdd = () => {\r\n        setList(list.concat(selected));\r\n    }\r\n    const handleDelete = (item: string) => {\r\n        setList(list.filter(l => l != item));\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSelected(options.filter(opt => !list.includes(opt))[0]);\r\n    }, [list])\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"opt\"><h5>{message}:</h5></label>\r\n                <div className=\"mb-1\">\r\n                    {list.map(item => (\r\n                        <span className=\"badge selected-badge mx-1\" key={item}>{item}<sup className=\"selected-x\" onClick={()=>handleDelete(item)}>x</sup></span>\r\n                    ))}\r\n                </div>\r\n                <div className=\"form-inline\">\r\n                    <select className=\"form-control\" id=\"opt\"\r\n                        value={selected}\r\n                        onChange={(e) => setSelected(e.target.value)}>\r\n                        {options.filter(opt => !list.includes(opt))\r\n                                .map(opt => (\r\n                            <option key={opt}>{opt}</option>\r\n                        ))}\r\n                        <option>Other</option>\r\n                    </select>\r\n                    <button type=\"button\" className=\"btn btn-outline-primary ml-1\"\r\n                        onClick={handleAdd}\r\n                        disabled={list.length >= limit ? true : false}>Add</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n    \r\nexport default ManageAddList;","import React, { useState } from 'react';\r\n\r\nimport { menuType, menuItemType } from '../utils/types';\r\nimport \"../css/ManageAddMenu.css\";\r\n\r\n\r\nfunction ManageMenu({menu, menus, setMenus}: {\r\n        menu: menuType,\r\n        menus: menuType[],\r\n        setMenus(arg: menuType[]): void\r\n    }) {\r\n    const [ itemName, setItemName ] = useState(\"\");\r\n    const [ itemDescription, setItemDescription ] = useState(\"\");\r\n    const [ itemPrice, setItemPrice ] = useState(0);\r\n\r\n    const handleAddItem = () => {\r\n        setMenus(menus.map(m => m.name === menu.name ? {\r\n            ...menu,\r\n            items: menu.items.concat({\r\n                name: itemName,\r\n                description: itemDescription,\r\n                price: itemPrice\r\n            } as menuItemType)\r\n        } : m));\r\n        setItemName(\"\");\r\n        setItemDescription(\"\");\r\n        setItemPrice(0);\r\n    }\r\n    const handleDeleteItem = (item: menuItemType) => {\r\n        setMenus(menus.map(m => m.name === menu.name ? {\r\n            ...menu,\r\n            items: menu.items.filter(i => i.name === item.name ? false : true)\r\n        } : m));\r\n    }\r\n\r\n    return (\r\n        <div key={menu.name}>\r\n            <h5>{menu.name}</h5>\r\n            <div className=\"d-flex flex-wrap\">\r\n                {menu.items.map(item => (\r\n                    <div className=\"card menu-card\" key={item.name}>\r\n                        <div>\r\n                            <button className=\"float-right btn btn-light delete-button\" onClick={() => handleDeleteItem(item)}>x</button>\r\n                            <div>\r\n                                <span>{item.name}</span>\r\n                            </div>\r\n                            <div>\r\n                                <span>{item.description}</span>\r\n                            </div>\r\n                            <div>\r\n                                <span>${item.price}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"card menu-card\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Item name\" maxLength={40}\r\n                    value={itemName} onChange={(e) => setItemName(e.target.value)} />\r\n                <textarea className=\"form-control\" placeholder=\"Description\" rows={3}\r\n                    value={itemDescription} onChange={(e) => setItemDescription(e.target.value)} />\r\n                <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\"><span className=\"input-group-text\">$</span></div>\r\n                    <input type=\"number\" id=\"price\" className=\"form-control\" placeholder=\"Unit price\"\r\n                        value={itemPrice}\r\n                        onChange={(e) => setItemPrice(parseFloat(e.target.value))}\r\n                        min={0} step={0.01} />\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-outline-primary\"\r\n                    disabled={!(itemPrice >= 0 && itemName.length > 0)}\r\n                    onClick={handleAddItem}>\r\n                    Add Item\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction ManageAddMenu({menus, setMenus}: {\r\n        menus: menuType[],\r\n        setMenus(arg: menuType[]): void\r\n    }) {\r\n    const [ menuName, setMenuName ] = useState(\"\");\r\n    \r\n    const handleAddMenu = () => {\r\n        if (menuName !== \"\") {\r\n            setMenus(menus.concat({name: menuName, items: []} as menuType));\r\n            setMenuName(\"\");\r\n        }\r\n    }\r\n    const handleDeleteMenu = (menu: menuType) => {\r\n        setMenus(menus.filter(m => m.name === menu.name ? false : true));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"form-group\">\r\n                <div><h5>Menus:</h5></div>\r\n                {menus.map(menu => (\r\n                    <div className=\"border rounded p-2 mx-1 my-2\" key={menu.name}>\r\n                        <button className=\"float-right btn btn-light delete-button\" onClick={() => handleDeleteMenu(menu)}>x</button>\r\n                        <ManageMenu menu={menu} menus={menus} setMenus={setMenus} />\r\n                    </div>\r\n                ))}\r\n                <div className=\"form-inline\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Menu name\"\r\n                        value={menuName}\r\n                        onChange={(e)=>setMenuName(e.target.value)} />\r\n                    <button type=\"button\" className=\"btn btn-outline-primary ml-1\"\r\n                        disabled={menuName===\"\"}\r\n                        onClick={handleAddMenu}>Add Menu</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n    \r\nexport default ManageAddMenu;","import React, { FormEvent, useState } from 'react';\r\n\r\nimport ManageAddList from './ManageAddList';\r\nimport ManageAddMenu from './ManageAddMenu';\r\nimport { managerType, menuType } from '../utils/types';\r\nimport manageService from '../services/manageService';\r\n\r\n\r\nfunction ManageAddRestaurantPanel({handleAddRestaurant}: {handleAddRestaurant: (arg0: managerType)=>void}) {\r\n    const [name, setName] = useState<string>(\"\");\r\n    const [address, setAddress] = useState<string>(\"\");\r\n    const [openingTime, setOpeningTime] = useState<string[]>([\r\n        \"09:00-21:00\",\r\n        \"09:00-21:00\",\r\n        \"09:00-21:00\",\r\n        \"09:00-21:00\",\r\n        \"09:00-21:00\",\r\n        \"09:00-21:00\",\r\n        \"09:00-21:00\"\r\n    ]);\r\n    const [keywords, setKeywords] = useState<string[]>([]);\r\n    // const [parking, setParking] = useState<string[]>([]);\r\n    const [payment, setPayment] = useState<string[]>([]);\r\n    const [delivery, setDelivery] = useState(false);\r\n    const [takeaway, setTakeaway] = useState(false);\r\n    const [menus, setMenus] = useState<menuType[]>([]);\r\n    const [location, setLocation] = useState({lat: \"0\", lng: \"0\"});\r\n    const [ errorMessage, setErrorMessage ] = useState<string>();\r\n    \r\n    const keywordChoices = [\"Canadian\", \"Korean\", \"Chinese\", \"Indian\", \"Italian\", \"French\", \"Turkish\", \"American\", \"Mexican\", \"Japanese\", \"Thai\",\r\n    \"Vietnam\", \"Mongolian\", \"Spanish\", \"European\", \"Asian\", \"Mediterranean\", \"African\", \"Fusion\", \"Continental\", \r\n    \"Breakfast\", \"Lunch\", \"Brunch\", \"Fast food\", \"Fine dining\", \"Farm-to-table\", \"Comfort food\", \"Pub\", \"Bar\",\r\n    \"Pizza\", \"Pho\", \"BBQ\", \"Wings\", \"Steakhouse\", \"Sushi\", \"Teppanyaki\", \"Seafood\"];\r\n    const paymentChoices = [\"Visa\", \"MasterCard\", \"AMEX\", \"Discover\"];\r\n    // const parkingChoices = [\"Complimentary parking\", \"Public parking\", \"Street parking\", \"Underground parking\", \"Valet parking\"];\r\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];    \r\n\r\n    const deconstructTime = (timestr: string) => {\r\n        const [open, close] = timestr.split(\"-\");\r\n        return [...open.split(\":\"), ...close.split(\":\")];\r\n    }\r\n    const handleOpenTime = (day: number, newTime: string, slot: number) => {\r\n        const hours = [...openingTime];\r\n        const deconArray = deconstructTime(hours[day]);\r\n        deconArray[slot] = `0${newTime}`.slice(-2);\r\n        hours[day] = `${deconArray[0]}:${deconArray[1]}-${deconArray[2]}:${deconArray[3]}`;\r\n        setOpeningTime(hours);\r\n    }\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLElement>) => {\r\n        e.preventDefault();\r\n        setErrorMessage(undefined);\r\n        if (name === \"\") setErrorMessage(\"Name cannot be empty\");\r\n        else if (address === \"\") setErrorMessage(\"Address cannot be empty\");\r\n        else if (keywords.length === 0) setErrorMessage(\"Please choose at least one keyword\");\r\n        else if (menus.length === 0) setErrorMessage(\"Please have at least one menu\");\r\n        else if (menus.filter(menu => menu.items.length == 0).length > 0) setErrorMessage(\"Please have at least one item in a menu\");\r\n        else if (location.lat === \"0\" || location.lng === \"0\") setErrorMessage(\"Please enter valid coordinates\");\r\n        else {\r\n            manageService.addRestaurant({\r\n                name,\r\n                address,\r\n                opening_time: openingTime,\r\n                keywords,\r\n                payment,\r\n                delivery,\r\n                takeaway,\r\n                menus,\r\n                location: {lat: parseFloat(location.lat), lng: parseFloat(location.lng)}\r\n            })\r\n                .then(res => {\r\n                    handleAddRestaurant(res);\r\n                })\r\n                .catch(err => {\r\n                    setErrorMessage(err.response?.data?.error || \"Something went wrong. Please try again later.\");\r\n                });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {errorMessage && <div className=\"error-message p-1 m-1\">{errorMessage}</div>}\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"restaurantName\"><h5>Restaurant Name:</h5></label>\r\n                <input type=\"text\" className=\"form-control\" id=\"restaurantName\" placeholder=\"Restaurant Name\"\r\n                    onChange={(e)=>setName(e.target.value)} />\r\n            </div><hr/>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"restaurantAddress\"><h5>Restaurant Address:</h5></label>\r\n                <input type=\"text\" className=\"form-control\" id=\"restaurantAddress\" placeholder=\"Address\"\r\n                    onChange={(e)=>setAddress(e.target.value)} />\r\n            </div><hr/>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"restaurantAddress\"><h5>Restaurant Location:</h5></label>\r\n                <div className=\"form-inline\" id=\"restaurantAddress\">\r\n                    <label htmlFor=\"restaurantLatitude\">Latitude:</label>\r\n                    <input type=\"number\" className=\"form-control\" id=\"restaurantLatitude\" placeholder=\"Latitude\"\r\n                        value={location.lat}\r\n                        onChange={(e)=>setLocation({lat: e.target.value, lng: location.lng})} />\r\n                    <label htmlFor=\"restaurantLongitude\">Longitude:</label>\r\n                    <input type=\"number\" className=\"form-control\" id=\"restaurantLongitude\" placeholder=\"Longitude\"\r\n                        value={location.lng}\r\n                        onChange={(e)=>setLocation({lat: location.lat, lng: e.target.value})} />\r\n                </div>\r\n            </div><hr/>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"openTime\"><h5>Opening Time:</h5></label>\r\n                <div id=\"openTime\">\r\n                    {days.map((s, d) => (\r\n                        <div key={s}>\r\n                            <div className=\"form-row\">\r\n                                <label htmlFor={`${s}-ch`} className=\"col-1\">{s}:</label>\r\n                                <input type=\"number\" className=\"form-control col-1\" id={`${s}-ch`}\r\n                                    min={0} max={23} step={1} value={deconstructTime(openingTime[d])[0]}\r\n                                    onChange={(e)=>handleOpenTime(d, e.target.value, 0)} />\r\n                                <label htmlFor={`${s}-om`} className=\"mx-1\">:</label>\r\n                                <input type=\"number\" className=\"form-control col-1\" id={`${s}-om`}\r\n                                    min={0} max={59} step={1} value={deconstructTime(openingTime[d])[1]}\r\n                                    onChange={(e)=>handleOpenTime(d, e.target.value, 1)} />\r\n                                <label htmlFor={`${s}-ch`} className=\"mx-1\">to</label>\r\n                                <input type=\"number\" className=\"form-control col-1\" id={`${s}-ch`}\r\n                                    min={0} max={23} step={1} value={deconstructTime(openingTime[d])[2]}\r\n                                    onChange={(e)=>handleOpenTime(d, e.target.value, 2)} />\r\n                                <label htmlFor={`${s}-cm`} className=\"mx-1\">:</label>\r\n                                <input type=\"number\" className=\"form-control col-1\" id={`${s}-cm`}\r\n                                    min={0} max={59} step={1} value={deconstructTime(openingTime[d])[3]}\r\n                                    onChange={(e)=>handleOpenTime(d, e.target.value, 3)} />\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div><hr/>\r\n            <ManageAddList list={keywords} setList={setKeywords} options={keywordChoices} limit={5} message={\"Select up to 5 keywords:\"} /><hr/>\r\n            <ManageAddList list={payment} setList={setPayment} options={paymentChoices} limit={4} message={\"Select up to 4 payment methods:\"} /><hr/>\r\n            {/* <ManageAddList list={parking} setList={setParking} options={parkingChoices} limit={5} message={\"Select up to 5 parking options:\"} /><hr/> */}\r\n            <div className=\"form-check-label\"><h5>Delivery methods:</h5></div>\r\n            <div>\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"delivery\" onChange={(e)=>setDelivery(e.target.checked)} />\r\n                    <label className=\"form-check-label\" htmlFor=\"delivery\">Delivery</label>\r\n                </div>\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"takeaway\" onChange={(e)=>setTakeaway(e.target.checked)} />\r\n                    <label className=\"form-check-label\" htmlFor=\"takeaway\">Takeaway</label>\r\n                </div>\r\n            </div><hr/>\r\n            <ManageAddMenu menus={menus} setMenus={setMenus} /><hr/>\r\n            {errorMessage && <div className=\"error-message p-1 m-1\">{errorMessage}</div>}\r\n            <button type=\"submit\" className=\"btn btn-primary my-1\">Submit</button>\r\n        </form>\r\n    )\r\n}\r\n    \r\nexport default ManageAddRestaurantPanel;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { managerType } from '../utils/types';\r\nimport ManagePanel from \"./ManagePanel\";\r\nimport ManageAddRestaurantPanel from \"./ManageAddRestaurantPanel\";\r\nimport manageService from '../services/manageService';\r\nimport '../css/ManageView.css';\r\n\r\n\r\nfunction ManageView() {\r\n    const [ manager, setManager ] = useState<managerType>({username: \"\", name: \"\", restaurants:[]} as managerType);\r\n    const [ adding, setAdding ] = useState(false);\r\n    const { placeID }: { placeID:string } = useParams();\r\n    const [ errorMessage, setErrorMessage ] = useState<string>();\r\n\r\n    useEffect(()=>{\r\n        setErrorMessage(undefined);\r\n        if (placeID) {\r\n            manageService.manageRestaurant(placeID)\r\n                .then(res => {\r\n                    setManager(res);\r\n                })\r\n                .catch(err => {\r\n                    setErrorMessage(err.response?.data?.error || \"Something went wrong. Please try again later.\");\r\n                });\r\n        } else {\r\n            manageService.manageRestaurant()\r\n                .then(res => {\r\n                    setManager(res);\r\n                })\r\n                .catch(err => {\r\n                    setErrorMessage(err.response?.data?.error || \"Something went wrong. Please try again later.\");\r\n                });\r\n        }\r\n        \r\n    }, [placeID]);\r\n\r\n    const handleAddRestaurant = (updatedManager: managerType) => {\r\n        setManager(updatedManager);\r\n        setAdding(false);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"business-view\">\r\n            <h1 className=\"font-weight-bold p-3\">My Restaurants</h1>\r\n            {errorMessage && <div className=\"error-message p-1 m-1\">{errorMessage}</div>}\r\n            {adding ? <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => setAdding(false)}>Cancel</button> :\r\n                      <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => setAdding(true)}>Add a restaurant</button>}\r\n            <hr/>\r\n            {adding ? <ManageAddRestaurantPanel handleAddRestaurant={handleAddRestaurant}/> : \r\n                      <ManagePanel restaurants={manager.restaurants} placeID={placeID} />}\r\n        </div>\r\n    );\r\n}\r\n    \r\nexport default ManageView;","import React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport loginService from '../services/loginService';\r\n\r\n\r\nfunction LogoutView({setLoginToken}: {setLoginToken: (arg0: string|null)=>void}) {\r\n    useEffect(()=>{\r\n        setLoginToken(null);\r\n        loginService.logout();\r\n    }, []);\r\n    \r\n    return (\r\n        <Redirect to=\"/\"/>\r\n    )\r\n}\r\n    \r\nexport default LogoutView;","import React, { useEffect, useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Link, Redirect\n} from \"react-router-dom\";\n\nimport LoginView from './components/LoginView';\nimport RegisterView from './components/RegisterView';\nimport SearchPanel from './components/SearchPanel';\nimport SearchView from './components/SearchView';\nimport PlaceView from './components/PlaceView';\nimport OrderView from './components/OrderView';\nimport ManageView from './components/ManageView';\nimport loginService from './services/loginService';\nimport LogoutView from './components/LogoutView';\nimport './css/App.css';\n\n\nfunction App() {\n  const [ loginToken, setLoginToken ] = useState<string|null>(loginService.getToken());\n\n  useEffect(() => {\n    if (loginToken) {\n      loginService.checkToken()\n        .catch(err => {\n          if (err.response?.status === 401) { // bad token\n            loginService.logout();\n            setLoginToken(null);\n          }\n        });\n    }\n  }, [loginToken]);\n\n  return (\n    <div id=\"app\">\n      <Router>\n      <header className=\"app-header d-flex justify-content-between\">\n        <ul className=\"nav\">\n          <li className=\"nav-item\">\n            <Link to=\"/\" className=\"mx-1\">Home</Link>\n          </li>\n          {loginToken && <li className=\"nav-item\">\n            <Link to=\"/order\" className=\"mx-1\">My Orders</Link>\n          </li>}\n        </ul>\n        {loginToken ? <ul className=\"nav\">\n          <li className=\"nav-item\">\n            <Link to=\"/manage\" className=\"mx-1\">My Restaurants</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/logout\" className=\"mx-1\">Logout</Link>\n          </li>\n        </ul> : \n        <ul className=\"nav\">\n          <li className=\"nav-item\">\n            <Link to=\"/login\" className=\"mx-1\">Login</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/register\" className=\"mx-1\">Register</Link>\n          </li>\n        </ul>}\n\n      </header>\n        <Switch>\n          <Route exact path=\"/\">\n            <SearchPanel />\n          </Route>\n          <Route path=\"/search\">\n            <SearchView />\n          </Route>\n          <Route path=\"/place/:placeID\">\n            <PlaceView />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterView />\n          </Route>\n          <Route path=\"/login\">\n            {loginToken ? <Redirect to=\"/\"/> : <LoginView setLoginToken={setLoginToken}/>}\n          </Route>\n          <Route path=\"/order/:orderID?\">\n          {loginToken ? <OrderView /> : <Redirect to=\"/login\"/>}\n          </Route>\n          <Route path=\"/manage/:placeID?\">\n            {loginToken ? <ManageView /> : <Redirect to=\"/login\"/>}\n          </Route>\n          <Route path=\"/logout\">\n            {loginToken ? <LogoutView  setLoginToken={setLoginToken}/> : <Redirect to=\"/\"/>}\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { loginActionType } from './reducerTypes';\r\nimport { loginType } from '../utils/types';\r\n\r\n\r\nconst loginReducer = (state: loginType|null=null, action: loginActionType) => {\r\n    switch(action.type) {\r\n        case \"LOGIN\":\r\n            return {\r\n                username: action.data?.username,\r\n                token: action.data?.token,\r\n            } as loginType;\r\n        case \"LOGOUT\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const login = (user: loginType) => {\r\n    return {\r\n        type: \"LOGIN\",\r\n        data: user,\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: \"LOGOUT\",\r\n        data: null,\r\n    }\r\n}\r\n\r\nexport default loginReducer;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers  } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport loginReducer from './reducers/loginReducer';\nimport modalReducer from './reducers/modalReducer';\nimport orderReducer from './reducers/orderReducer';\nimport reportWebVitals from './reportWebVitals';\nimport './css/index.css';\n\n\nconst store = createStore(combineReducers({\n  login: loginReducer,\n  modal: modalReducer,\n  order: orderReducer,\n}));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["services/loginService.tsx","components/LoginView.tsx","services/registerService.tsx","components/RegisterView.tsx","services/searchService.tsx","components/SearchPanel.tsx","components/miniComponents.tsx","components/PlaceInfoCard.tsx","services/restaurantService.tsx","components/MapPanel.tsx","components/SearchView.tsx","utils/hooks.tsx","reducers/modalReducer.tsx","reducers/orderReducer.tsx","components/MenuPanel.tsx","services/orderService.tsx","components/PlaceView.tsx","components/OrderInfoCard.tsx","components/OrderView.tsx","services/manageService.tsx","components/ManagePanel.tsx","components/ManageAddList.tsx","components/ManageAddMenu.tsx","components/ManageAddRestaurantPanel.tsx","components/ManageView.tsx","components/LogoutView.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["login","credentials","a","axios","post","headers","response","data","logout","window","localStorage","removeItem","storeToken","token","setItem","getToken","getItem","LoginView","setLoginToken","useState","username","setUsername","password","setPassword","onSubmit","event","preventDefault","loginService","then","res","catch","err","console","log","error","className","autoFocus","type","name","onChange","target","value","placeholder","required","registerAccount","email","RegisterView","setEmail","redirect","setRedirect","to","registerService","q","near","SearchPanel","lastQuery","lastLocation","query","setQuery","location","setLocation","history","useHistory","path","useLocation","useEffect","pathname","size","onClick","navigator","geolocation","getCurrentPosition","loc","push","searchService","coords","latitude","longitude","RatingStar","rating","intPart","Math","floor","decimalPart","stars","i","key","PriceSign","priceLevel","repeat","OpenUntil","openingTime","time","Date","getDay","PlaceInfoCard","restaurant","verbose","style","height","backgroundColor","address","opening_time","keywords","join","payment","user_ratings_total","price_level","backendURL","getAllRestaurants","get","getRestaurant","id","searchRestaurantByKeywords","placeOrderAtRestaurant","order","Authorization","routeToRestaurant","MapPanel","keyword","locationQuery","oldKeyword","setOldKeyword","oldLocation","setOldLocation","map","setMap","restaurants","setRestaurants","mapElement","document","getElementById","newMap","google","maps","Map","center","zoom","addListener","newCenter","getCenter","toJSON","newMarker","Marker","position","title","infowindow","InfoWindow","content","renderToString","setContent","open","close","restaurantService","mapCenter","searchBounds","LatLngBounds","lat","lng","undefined","Geocoder","geocode","bounds","results","status","geometry","geocodeAddress","SearchView","URLSearchParams","search","queryNear","setLocationQuery","setAddress","match","parseFloat","split","toFixed","modalReducer","state","action","description","price","orderChange","item","orderReducer","filter","length","concat","quantity","OrderModal","dispatch","useDispatch","useSelector","modal","show","setQuantity","totalPrice","handleClose","Modal","onHide","animation","Header","closeButton","Title","Body","Footer","Button","variant","defaultValue","min","max","e","parseInt","MenuItem","modalShow","MenuPanel","menu","section","items","getAllOrders","getOrder","routeToConfirmation","reduce","prevValue","currItem","PlaceView","setRestaurant","placeID","useParams","handleShow","orderService","handleOrderChange","menus","curr","itemPrice","takeaway","disabled","delivery","OrderInfoCard","footer","createTime","toLocaleString","_id","OrderView","setOrder","allOrders","setAllOrders","orderID","complete","o","toDateString","addRestaurant","businessInfo","manageRestaurant","restaurantID","restaurantOrders","updateOrderStatus","put","OrderStatusModal","updateOrder","setShow","manageService","ManagePanel","orders","setOrders","orderToUpdate","setOrderToUpdate","handleOrderStatus","newOrder","ManageAddList","list","setList","options","limit","message","opt","includes","selected","setSelected","htmlFor","l","handleDelete","ManageMenu","setMenus","itemName","setItemName","itemDescription","setItemDescription","setItemPrice","m","handleDeleteItem","maxLength","rows","step","ManageAddMenu","menuName","setMenuName","handleDeleteMenu","ManageAddRestaurantPanel","handleAddRestaurant","setName","setOpeningTime","setKeywords","setPayment","setDelivery","setTakeaway","deconstructTime","timestr","handleOpenTime","day","newTime","slot","hours","deconArray","slice","s","d","checked","ManageView","manager","setManager","adding","setAdding","updatedManager","LogoutView","App","loginToken","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","combineReducers","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4ad0eab9.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {credentialType} from '../utils/types';\r\n\r\n\r\nconst baseUrl = '/api/login';\r\n\r\nconst login = async (credentials: credentialType) => {\r\n  const response = await axios.post(baseUrl, credentials, {\r\n    headers: {\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n  });\r\n  return response.data;\r\n}\r\n\r\nconst logout = () => {\r\n  window.localStorage.removeItem('logintoken');\r\n}\r\n\r\nconst storeToken = (token: string) => {   \r\n  window.localStorage.setItem('logintoken', token);  \r\n}\r\n\r\nconst getToken = () => {\r\n  return window.localStorage.getItem('logintoken');\r\n}\r\n\r\nexport default { login, logout, storeToken, getToken };","import React, { ChangeEvent, FormEvent, useState } from 'react';\r\n\r\nimport loginService from '../services/loginService';\r\n\r\n\r\nfunction LoginView({setLoginToken}: {setLoginToken: (arg0: string)=>void}) {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleUsername = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setUsername(event.target.value);\r\n    }\r\n    const handlePassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        \r\n        loginService.login({\r\n            username,\r\n            password\r\n        }).then(res => {\r\n            loginService.storeToken(res.token);\r\n            setLoginToken(res.token);\r\n        }).catch(err => {\r\n            console.log(err.response.data.error);\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit} className=\"card card-body\">\r\n                <div className=\"form-group\">\r\n                    <input className=\"form-control\" autoFocus type=\"text\" name=\"username\" onChange={handleUsername} placeholder=\"Username\" required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input className=\"form-control\" type=\"password\" name=\"password\" onChange={handlePassword} placeholder=\"Password\" required/>\r\n                </div>\r\n                <button className=\"btn btn-primary\">Login</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n    \r\nexport default LoginView;","import axios from 'axios';\r\n\r\n\r\nconst base_url = \"/api/register\";\r\n\r\nconst registerAccount = async (username: string, email: string, password: string) => {\r\n    return await axios.post(`${base_url}/`, {\r\n        username,\r\n        email,\r\n        password\r\n    }, {\r\n        headers: {\r\n            \"Content-type\": \"application/json\"\r\n        }\r\n    });\r\n}\r\n\r\nexport default { registerAccount };","import React, { ChangeEvent, FormEvent, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport registerService from '../services/registerService';\r\n\r\n\r\nfunction RegisterView() {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const handleUsername = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setUsername(event.target.value);\r\n    }\r\n    const handleEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handlePassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        \r\n        registerService.registerAccount(username, email, password)\r\n            .then(res => {\r\n                setRedirect(true);\r\n            }).catch(err => {\r\n                console.log(err.response.data.error);\r\n            });\r\n    }\r\n    if (redirect) {\r\n        return <Redirect to=\"/login\"/>\r\n    } else {\r\n        return (\r\n            <div>\r\n                <form onSubmit={handleSubmit} className=\"card card-body\">\r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\" autoFocus type=\"text\" name=\"username\" onChange={handleUsername} placeholder=\"Username\" required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\" type=\"email\" name=\"email\" onChange={handleEmail} placeholder=\"Email Address\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\" type=\"password\" name=\"password\" onChange={handlePassword} placeholder=\"Password\" required/>\r\n                    </div>\r\n                    {/* <div className=\"form-group\">\r\n                        <input className=\"form-control\" type=\"password\" name=\"confirmation\" onChange={handlePassword} placeholder=\"Confirm Password\" required/>\r\n                    </div> */}\r\n                    <button className=\"btn btn-primary\">Register</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n    \r\nexport default RegisterView;","const frontendURL = '/search';\r\n\r\nconst routeToSearch = (q?: string, near?: string) => {\r\n    return `${frontendURL}?q=${q}&near=${near}`;\r\n}\r\n  \r\nexport default { routeToSearch };","import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport searchService from '../services/searchService';\r\nimport { searchQueryType, locationType } from '../utils/types';\r\nimport '../css/SearchPanel.css';\r\n\r\n\r\nfunction SearchPanel({lastQuery, lastLocation}: searchQueryType) {    \r\n    const [ query, setQuery ] = useState(lastQuery || \"\");\r\n    const [ location, setLocation ] = useState(lastLocation || \"\");\r\n    const history = useHistory();\r\n    const path = useLocation();\r\n    \r\n    useEffect(() => {\r\n        if (lastLocation) {\r\n            setLocation(lastLocation);\r\n        }\r\n    }, [lastLocation]);\r\n\r\n    const searchCurrentLocation = (): void => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((loc: locationType): void => {\r\n                history.push(searchService.routeToSearch(query, `${loc.coords.latitude},${loc.coords.longitude}`));\r\n            }, () => {\r\n                console.log(\"An error occured. Cannot find your location.\");    \r\n            });\r\n        } else {\r\n            console.log(\"Navigator unavailable. Cannot find your location.\");\r\n        }\r\n    }\r\n    const onQuery = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setQuery(event.target.value);\r\n    };\r\n    const onLocation = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setLocation(event.target.value);\r\n    };\r\n    const onSearch = (event: React.FormEvent): void => {\r\n        // Submit search event\r\n        event.preventDefault();\r\n        if (query === \"\") return;\r\n        if (location === \"\") {\r\n            searchCurrentLocation();\r\n        } else {\r\n            history.push(searchService.routeToSearch(query, `${location}`));\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className={path.pathname === '/' ? \"search-page\" : \"\"}>\r\n            <div className={`d-flex flex-column align-items-center justify-content-center ${path.pathname === '/' && \"search-panel\"}`}>\r\n            {path.pathname === '/' && <h2 className=\"search-panel-title\">Find your next meal here</h2>}\r\n            <form className=\"form-inline justify-content-center p-2\">\r\n                <div>\r\n                    <input type=\"text\" name=\"search\" value={query}\r\n                        placeholder=\"Restaurant or Cuisine\" onChange={onQuery}\r\n                        className=\"form-control mx-2 input-box\" size={50}\r\n                        required\r\n                    />\r\n                    <input type=\"text\" name=\"location\" value={location}\r\n                        placeholder=\"Location\" onChange={onLocation}\r\n                        className=\"form-control mx-2 input-box\" size={30}\r\n                    />\r\n                    <button className=\"btn btn-primary px-5 input-box\" onClick={onSearch}>Go</button>\r\n                </div>\r\n            </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n    \r\nexport default SearchPanel;","import React from 'react';\r\n\r\n\r\nexport function RatingStar({rating, className}: {\r\n                            rating:number,\r\n                            className?: string\r\n                        }) {\r\n    const intPart: number = Math.floor(rating);\r\n    const decimalPart: number = rating - intPart;\r\n    const stars: JSX.Element[] = [];\r\n    for (let i = 0; i < intPart; i++) {\r\n        stars.push(<i key={i+\"star\"} className=\"fas fa-star\"></i>);\r\n    }\r\n    if (decimalPart >= 0.75) {\r\n        stars.push(<i key=\"laststar\" className=\"fas fa-star\"></i>);\r\n    } else if (decimalPart >= 0.25) {\r\n        stars.push(<i key=\"laststar\" className=\"fas fa-star-half\"></i>);\r\n    }\r\n    return <>\r\n        <span className={className}>{rating}</span> <small className=\"text-warning\">{stars}</small>\r\n    </>;\r\n}\r\n\r\nexport function PriceSign({priceLevel, className}: {\r\n                           priceLevel: number,\r\n                           className?: string\r\n                        }) {\r\n    return <span className={className}>{\"$\".repeat(priceLevel)}</span>;\r\n}\r\n\r\nexport function OpenUntil({openingTime, className}: {\r\n                           openingTime: string[],\r\n                           className?: string\r\n                        }) {\r\n    const d = new Date().getDay();\r\n    const time = openingTime[d];\r\n    return <span className={className}>{time}</span>;\r\n}","import React from 'react';\r\nimport { restaurantType } from '../utils/types';\r\n\r\nimport { RatingStar, PriceSign, OpenUntil } from './miniComponents';\r\n\r\n\r\nfunction PlaceInfoCard({restaurant, verbose}: {restaurant: restaurantType, verbose: boolean}) {\r\n    if (verbose) {\r\n        return (\r\n            <>\r\n                <h5>Info</h5>\r\n                <h6>{restaurant.name}</h6>\r\n                <div className=\"embedmap p-1\" style={{height: \"200px\", backgroundColor: \"green\"}}></div>\r\n                <div className=\"font-weight-bold mt-3\">Location</div>\r\n                <div>{restaurant.address}</div>\r\n                <div className=\"font-weight-bold mt-3\">Hours of Operation</div>\r\n                <div><OpenUntil openingTime={restaurant.opening_time}/></div>\r\n                <div className=\"font-weight-bold mt-3\">Cuisine</div>\r\n                <div>{restaurant.keywords.join(\", \")}</div>\r\n                <div className=\"font-weight-bold mt-3\">Payment Options</div>\r\n                <div>{restaurant.payment.join(\", \")}</div>\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"p-3\">\r\n                <h6>{restaurant.name}</h6>\r\n                <RatingStar rating={restaurant.rating as number} className=\"small text-muted\"/>\r\n                <small className=\"text-muted\">({restaurant.user_ratings_total})</small> · <PriceSign priceLevel={restaurant.price_level as number} className=\"small text-muted\"/><br/>\r\n                <small className=\"text-muted\">{restaurant.keywords.join(\" · \")}</small><br/>\r\n                <small className=\"text-muted\">{restaurant.address}</small><br/>\r\n                <OpenUntil openingTime={restaurant.opening_time} className=\"small text-muted\"/><br/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlaceInfoCard;","import axios from 'axios';\r\n\r\nimport { orderItemType } from '../utils/types';\r\nimport loginService from './loginService';\r\n\r\n\r\nconst frontendURL = '/place';\r\nconst backendURL = '/api/restaurant';\r\n\r\nconst getAllRestaurants = async () => {\r\n  const response = await axios.get(backendURL, {\r\n    headers: {\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n  });\r\n  return response.data;\r\n}\r\n\r\nconst getRestaurant = async (id: string) => {\r\n  const response = await axios.get(`${backendURL}/${id}`, {\r\n      headers: {\r\n          \"Content-type\": \"application/json\"\r\n      }\r\n    });\r\n    return response.data;\r\n}\r\n\r\nconst searchRestaurantByKeywords = async (location: string, keywords: string) => {\r\n  const response = await axios.get(`${backendURL}/location/${location}/query/${keywords}`);\r\n  return response.data;\r\n}\r\n\r\nconst placeOrderAtRestaurant = async (id: string, order: orderItemType[]) => {\r\n  const response = await axios.post(`${backendURL}/${id}`, order,\r\n  {\r\n    headers: {\r\n        Authorization: `bearer ${loginService.getToken()}`,\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n  });\r\n  return response.data;\r\n}\r\n\r\nconst routeToRestaurant = (id?: string) => {\r\n  return `${frontendURL}/${id}`;\r\n}\r\n\r\nexport default { getAllRestaurants, getRestaurant, searchRestaurantByKeywords, placeOrderAtRestaurant, routeToRestaurant };","import React, { useState, useEffect } from 'react';\r\nimport { renderToString } from 'react-dom/server';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { mapLocationType, restaurantType } from '../utils/types';\r\nimport PlaceInfoCard from './PlaceInfoCard';\r\nimport restaurantService from '../services/restaurantService';\r\nimport '../css/MapPanel.css';\r\n\r\n\r\nfunction geocodeAddress(\r\n    map: google.maps.Map,\r\n    address: string,\r\n    setLocation: (arg0: mapLocationType) => void\r\n): void {\r\n    // Create boundry to limit geocode search\r\n    const mapCenter = map.getCenter();\r\n    const searchBounds = mapCenter ? new google.maps.LatLngBounds(\r\n        {lat: mapCenter.lat()-1, lng: mapCenter.lng()-1}, {lat: mapCenter.lat()+1, lng: mapCenter.lng()+1}) : undefined;\r\n    // Geocode service\r\n    const geocoder = new google.maps.Geocoder();\r\n    geocoder.geocode({ address: address, bounds: searchBounds }, (results, status) => {\r\n        if (status === \"OK\") {\r\n            setLocation(results[0].geometry.location.toJSON());\r\n        }\r\n    });\r\n}\r\n\r\nfunction MapPanel({keyword, location, locationQuery, address, setLocation} : {\r\n    keyword: string,\r\n    location?: mapLocationType,\r\n    locationQuery: string,\r\n    address: string,\r\n    setLocation: (arg0: mapLocationType)=>void;\r\n}) {\r\n    const [ oldKeyword, setOldKeyword ] = useState(\"\");\r\n    const [ oldLocation, setOldLocation ] = useState({});\r\n    const [ map, setMap ] = useState<google.maps.Map>();\r\n    const [ restaurants, setRestaurants ] = useState<restaurantType[]>([]);\r\n    const history = useHistory();\r\n    const mapElement = document.getElementById(\"map\");\r\n\r\n    useEffect(() => {\r\n        if (mapElement) {\r\n            const newMap = new google.maps.Map(mapElement, {\r\n                center: location,\r\n                zoom: 13,\r\n            });\r\n            google.maps.event.addListener(newMap, 'center_changed', function () {\r\n                // Everytime map center change\r\n                const newCenter = newMap.getCenter().toJSON();                \r\n                setLocation(newCenter);\r\n            });\r\n            restaurants.map(restaurant => {\r\n                const newMarker = new google.maps.Marker({\r\n                    position: restaurant.location,\r\n                    map: newMap,\r\n                    title: restaurant.name,\r\n                });\r\n                const infowindow = new google.maps.InfoWindow({\r\n                    content: \"\",\r\n                });\r\n                newMarker.addListener(\"mouseover\", () => {\r\n                    const content = renderToString((<PlaceInfoCard restaurant={restaurant} verbose={false} />));\r\n                    infowindow.setContent(content);\r\n                    infowindow.open(newMap, newMarker);\r\n                });\r\n                newMarker.addListener(\"mouseout\", () => {\r\n                    infowindow.close();\r\n                });\r\n                newMarker.addListener(\"click\", () => {\r\n                    history.push(`${restaurantService.routeToRestaurant(restaurant.id)}`);\r\n                });\r\n            });\r\n            setMap(newMap);\r\n        }\r\n    }, [mapElement, restaurants]);\r\n\r\n    useEffect(() => {\r\n        if (map && address) {\r\n            geocodeAddress(map, address, setLocation);\r\n        }\r\n    }, [map, locationQuery, address]);\r\n\r\n    // search restaurants at location\r\n    useEffect(() => {        \r\n        if (location) {\r\n            if (keyword === oldKeyword && location === oldLocation) return;\r\n            \r\n            restaurantService.searchRestaurantByKeywords(`${location.lat},${location.lng}`, keyword)\r\n                .then((res) => {\r\n                    setRestaurants(res);\r\n                    setOldKeyword(keyword);\r\n                    setOldLocation(location);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err.response.data.error);\r\n                });\r\n        }\r\n    }, [locationQuery, address, keyword]);\r\n\r\n    return (\r\n        <div className=\"map-panel\">\r\n            <div id=\"searchResult\">\r\n                <ul className=\"list-group\">\r\n                    {restaurants.map(restaurant => \r\n                    <li key={restaurant.id} className=\"list-group-item info-card p-0\">\r\n                        <Link to={restaurantService.routeToRestaurant(restaurant.id)}>\r\n                            <PlaceInfoCard restaurant={restaurant} verbose={false} />\r\n                        </Link>\r\n                    </li>)}\r\n                </ul>\r\n            </div>\r\n            <div id=\"map\" />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default MapPanel;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useQuery } from '../utils/hooks';\r\nimport { mapLocationType } from '../utils/types';\r\nimport SearchPanel from './SearchPanel';\r\nimport MapPanel from './MapPanel';\r\n\r\n\r\nfunction SearchView() {\r\n    const query = useQuery();\r\n    const keyword = query.get(\"q\") || \"\"; // keyword is just whatever is in url query\r\n    const queryNear = query.get(\"near\"); // location needs to be processed into coordinates or address\r\n\r\n    const [ location, setLocation ] = useState<mapLocationType>(); // location is used in actual query and controls map center\r\n    const [ locationQuery, setLocationQuery ] = useState<string>();\r\n    const [ address, setAddress ] = useState<string>(\"\"); // address is used to geocode incase the location query cannot be interpreted as coordinates\r\n    \r\n    useEffect(() => {\r\n        if (queryNear) {\r\n            if (queryNear.match(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$/)) {\r\n                setLocation({lat: parseFloat(queryNear.split(\",\")[0]), lng: parseFloat(queryNear.split(\",\")[1])});\r\n                setLocationQuery(queryNear);\r\n                setAddress(\"\");\r\n            } else {\r\n                setAddress(queryNear);\r\n                setLocation(undefined);\r\n                setLocationQuery(undefined);\r\n            }\r\n        } else {\r\n            setLocation(undefined);\r\n        }\r\n    }, [queryNear]);\r\n\r\n    return (\r\n        <div>\r\n            <SearchPanel lastQuery={keyword} lastLocation={location ? `${location.lat.toFixed(4)},${location.lng.toFixed(4)}` : address} />\r\n            <MapPanel keyword={keyword}\r\n                location={location ? location : undefined}\r\n                locationQuery={locationQuery ? locationQuery : \"\"}\r\n                address={location ? \"\" : address}\r\n                setLocation={setLocation}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n    \r\nexport default SearchView;","import { useLocation } from \"react-router-dom\";\r\n\r\nexport function useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n  ","import { modalActionType } from './reducerTypes';\r\nimport { menuItemType } from '../utils/types';\r\n\r\n\r\nconst modalReducer = (state:menuItemType|null=null, action: modalActionType) => {\r\n    switch(action.type) {\r\n        case \"MODAL_SHOW\":\r\n            return {\r\n                name: action.data?.name,\r\n                description: action.data?.description,\r\n                price: action.data?.price,\r\n            } as menuItemType;\r\n        case \"MODAL_HIDE\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const modalShow = (item:menuItemType) => {\r\n    return {\r\n        type: \"MODAL_SHOW\",\r\n        data: item,\r\n    }\r\n}\r\n\r\nexport const modalHide = () => {\r\n    return {\r\n        type: \"MODAL_HIDE\",\r\n        data: null,\r\n    }\r\n}\r\n\r\nexport default modalReducer;","import { orderActionType } from './reducerTypes';\r\nimport { orderItemType } from '../utils/types';\r\n\r\n\r\nconst orderReducer = (state:orderItemType[]=[], action: orderActionType) => {\r\n    switch(action.type) {\r\n        case \"ORDER_FOOD\":\r\n            // Pile everything up in one action?\r\n            if (state.filter(item => item.name === action.data?.name).length === 0) {\r\n                return state.concat(action.data as orderItemType);\r\n            } else {\r\n                if (action.data?.quantity === 0) {\r\n                    return state.filter(item => item.name !== action.data?.name);\r\n                } else {\r\n                    return state.map(item => item.name === action.data?.name ? action.data : item);\r\n                }\r\n            }\r\n        case \"ORDER_CLEAR\":\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderChange = (item:orderItemType) => {\r\n    return {\r\n        type: \"ORDER_FOOD\",\r\n        data: item,\r\n    };\r\n}\r\n\r\nexport const orderClear = () => {\r\n    return {\r\n        type: \"ORDER_CLEAR\",\r\n    };\r\n}\r\n\r\nexport default orderReducer;","import React, { ChangeEvent, useState } from 'react';\r\nimport { menuType, menuItemType, orderItemType } from '../utils/types';\r\nimport { useSelector, useDispatch, DefaultRootState } from 'react-redux';\r\nimport { modalShow, modalHide } from '../reducers/modalReducer';\r\nimport { orderChange } from '../reducers/orderReducer';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../css/MenuPanel.css';\r\n\r\n\r\nfunction OrderModal() {\r\n    const dispatch = useDispatch();\r\n    const item = useSelector((state: {modal:DefaultRootState, order:DefaultRootState}) => state.modal as menuItemType|null);\r\n    const show = item !== null;\r\n    const [ quantity, setQuantity ] = useState(1);\r\n    const totalPrice = item ? item.price * quantity : 0;\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuantity(parseInt(e.target.value));\r\n    };\r\n    const handleClose = () => {\r\n        dispatch(modalHide());\r\n        setQuantity(1);\r\n    };\r\n    const handleAdd = () => {\r\n        if (item) {\r\n            dispatch(orderChange({\r\n                name: item.name,\r\n                price: item.price,\r\n                quantity: quantity,\r\n            } as orderItemType));\r\n        }\r\n        dispatch(modalHide());\r\n        setQuantity(1);\r\n    }\r\n    \r\n\r\n    return (<Modal show={show} onHide={handleClose} animation={false}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>Add to Order</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            {item && <div className=\"m-2\">\r\n                <h5 className=\"card-title\">{item.name}</h5>\r\n                <p className=\"card-text\">{item.description}</p>\r\n            </div>}\r\n        </Modal.Body>\r\n        <Modal.Footer className=\"justify-content-between\">\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n                Cancel\r\n            </Button>\r\n            {item && <div className=\"d-flex align-items-center\">\r\n                <span>Quantity: </span>\r\n                <input type=\"number\" defaultValue={1} min=\"1\" max=\"99\" onChange={handleChange} className=\"form-control number mx-1\"/>\r\n                <Button variant=\"outline-primary\" onClick={handleAdd} className=\"add-button\">\r\n                    ${totalPrice.toFixed(2)} Add to Order\r\n                </Button>\r\n            </div>}\r\n        </Modal.Footer>\r\n    </Modal>)\r\n}\r\n\r\nfunction MenuItem({item}: {item: menuItemType}) {\r\n    const dispatch = useDispatch();\r\n    const handleClick = () => {\r\n        dispatch(modalShow({\r\n            name: item.name,\r\n            description: item.description,\r\n            price: item.price,\r\n        }));\r\n    };\r\n    return (\r\n        <div className=\"card menu-item m-2\" onClick={handleClick}>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{item.name}</h5>\r\n                <p className=\"card-text\">{item.description}</p>\r\n                <div>${item.price}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MenuPanel({menu}: {menu: menuType[]}) {\r\n\r\n    return (\r\n        <div>\r\n            {menu.map(section => (\r\n            <div key={section.name} className=\"my-4\">\r\n                <h4>{section.name}</h4>\r\n                <div className=\"d-flex flex-wrap\">\r\n                    {section.items.map(item => (\r\n                        <MenuItem key={`${section.name}-${item.name}`}\r\n                            item={item}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            ))}\r\n            <OrderModal/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MenuPanel;","import axios from 'axios';\r\n\r\nimport loginService from './loginService';\r\nimport { orderBEType, orderItemBEType } from '../utils/types';\r\n\r\n\r\nconst frontendURL = '/order';\r\nconst backendURL = '/api/order';\r\n\r\nconst getAllOrders = async () => {\r\n    return await axios.get(`${backendURL}/`, {\r\n        headers: {\r\n            Authorization: `bearer ${loginService.getToken()}`,\r\n            \"Content-type\": \"application/json\"\r\n        }\r\n    });\r\n}\r\n\r\nconst getOrder = async (id: string) => {\r\n    return await axios.get(`${backendURL}/${id}`, {\r\n        headers: {\r\n            Authorization: `bearer ${loginService.getToken()}`,\r\n            \"Content-type\": \"application/json\"\r\n        }\r\n    });\r\n}\r\n\r\nconst routeToConfirmation = (id: string) => {\r\n    return `${frontendURL}/${id}`;\r\n}\r\n\r\nconst totalPrice = (order: orderBEType) => {\r\n    return order.items.reduce((prevValue: number, currItem: orderItemBEType) => {\r\n        return prevValue + currItem.quantity * currItem.price;\r\n    }, 0).toFixed(2);\r\n}\r\n\r\nexport default { getAllOrders, getOrder, routeToConfirmation, totalPrice };","import React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch, DefaultRootState } from 'react-redux';\r\n\r\nimport MenuPanel from \"./MenuPanel\";\r\nimport { RatingStar, PriceSign } from './miniComponents';\r\nimport { orderItemType, restaurantType } from '../utils/types';\r\nimport { orderChange, orderClear } from '../reducers/orderReducer';\r\nimport restaurantService from '../services/restaurantService';\r\nimport orderService from '../services/orderService';\r\nimport '../css/PlaceView.css';\r\nimport PlaceInfoCard from './PlaceInfoCard';\r\n\r\n\r\nfunction PlaceView() {\r\n    const [ restaurant, setRestaurant ] = useState<restaurantType>();\r\n    const { placeID }: { placeID:string } = useParams();\r\n    const order = useSelector((state: {modal:DefaultRootState, order:DefaultRootState}) => state.order as orderItemType[]);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        restaurantService.getRestaurant(placeID)\r\n            .then((res) => {\r\n                setRestaurant(res);\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response.data.error);\r\n            });\r\n    }, [placeID]);\r\n\r\n    const handleShow = () => {\r\n        if (restaurant && restaurant.id) {\r\n            restaurantService.placeOrderAtRestaurant(restaurant.id, order)\r\n                .then(res => {\r\n                    dispatch(orderClear());\r\n                    history.push(orderService.routeToConfirmation(res.id));\r\n                })\r\n                .catch(err => {\r\n                    console.log(err.response.data.error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const itemPrice = (item: orderItemType) => item.price * item.quantity;\r\n    const totalPrice = (order: orderItemType[]) => {\r\n        return order.reduce((curr:number, item:orderItemType)=>curr+itemPrice(item), 0);\r\n    };\r\n    const handleOrderChange = (item: orderItemType) => {\r\n        return (e: ChangeEvent<HTMLInputElement>) => {\r\n            if (item) {\r\n                dispatch(orderChange({\r\n                    name: item.name,\r\n                    price: item.price,\r\n                    quantity: parseInt(e.target.value),\r\n                } as orderItemType));\r\n            }\r\n        }\r\n    };    \r\n\r\n    return (\r\n    <div className=\"place-view\">\r\n        <div></div>\r\n        {restaurant && <div className=\"place-info p-3\">\r\n            <h1 className=\"font-weight-bold\">{restaurant.name}</h1>\r\n            <div className=\"font-weight-bold\">\r\n                {restaurant.rating && <RatingStar rating={restaurant.rating}/>} <span>{restaurant.user_ratings_total} reviews</span> · {restaurant.price_level && <PriceSign priceLevel={restaurant.price_level}/>} · <span>{restaurant.keywords.join(\" · \")}</span>\r\n            </div>\r\n            <hr/>\r\n            <MenuPanel menu={restaurant.menus}></MenuPanel>\r\n        </div>}\r\n        {restaurant && <div className=\"booking-info p-3\">\r\n            <div className=\"card card-body shadow-sm rounded\">\r\n                <h5>Order</h5>\r\n                <div>\r\n                    {order.map(item => <div key={item.name}>\r\n                        <div className=\"my-1\">\r\n                            <input type=\"number\" onChange={handleOrderChange(item)}\r\n                                defaultValue={item.quantity} min={0} max={99} className=\"form-control number\"/>\r\n                            {item.name}\r\n                        </div>\r\n                    </div>)}\r\n                    <hr/>\r\n                    <div className=\"float-right\">Total: ${totalPrice(order).toFixed(2)}</div>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    {/* {business.dine_in && <button type=\"button\" onClick={handleShow} className=\"btn btn-danger mx-1\">Dine-in</button>} */}\r\n                    {restaurant.takeaway && <button type=\"button\" onClick={handleShow} disabled={order.length === 0}\r\n                        className=\"btn btn-danger px-4 mx-1\">Takeout</button>}\r\n                    {restaurant.delivery && <button type=\"button\" onClick={handleShow} disabled={order.length === 0}\r\n                        className=\"btn btn-danger px-4 mx-1\">Delivery</button>}\r\n                </div>\r\n            </div>\r\n            <div className=\"card card-body shadow-sm mt-3\">\r\n                <PlaceInfoCard restaurant={restaurant} verbose={true} />\r\n            </div>\r\n        </div>}\r\n    </div>\r\n    );\r\n}\r\n    \r\nexport default PlaceView;","import React from 'react';\r\n\r\nimport { orderBEType } from '../utils/types';\r\n\r\n\r\nfunction OrderInfoCard({order, title ,footer}: {\r\n    order: orderBEType,\r\n    title: string,\r\n    footer: string\r\n}) {\r\n    return (\r\n        <div className=\"card-body\">\r\n            <h4>{title}</h4>\r\n            <small className=\"text-muted\">Ordered at {new Date(order.createTime).toLocaleString()}</small>\r\n            <hr/>\r\n            <h5 className=\"card-title\">{order.restaurant.name}</h5>\r\n            {order.items.map(item => {\r\n                return (\r\n                    <div key={item._id}>\r\n                        <span>{item.name}</span> x <span>{item.quantity}</span> : <span>${item.price * item.quantity}</span>\r\n                    </div>\r\n                );\r\n            })}\r\n            <hr/>\r\n            <span>{footer}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderInfoCard;","import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\n\r\nimport orderService from '../services/orderService';\r\nimport { orderBEType } from '../utils/types';\r\nimport '../css/OrderView.css';\r\nimport OrderInfoCard from './OrderInfoCard';\r\n\r\n\r\nfunction OrderView() {\r\n    const [ order, setOrder ] = useState<orderBEType>();\r\n    const [ allOrders, setAllOrders ] = useState<orderBEType[]>([]);\r\n    const { orderID }: { orderID:string } = useParams();\r\n\r\n    useEffect(() => {\r\n        if (orderID) {\r\n            orderService.getOrder(orderID)\r\n                .then(res => {\r\n                    setOrder(res.data);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err.response.data.error);\r\n                });\r\n        } else {\r\n            orderService.getAllOrders()\r\n                .then(res => {                    \r\n                    setAllOrders(res.data);\r\n                    setOrder(undefined);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err.response.data.error);\r\n                });\r\n        }\r\n    }, [orderID]);\r\n\r\n    return (\r\n        <div className=\"order-view\">\r\n            {order ?\r\n            <div className=\"order-panel\">\r\n                <div className=\"card\">\r\n                    <OrderInfoCard order={order} title={`Your order is ${order.complete ? \"completed\" : \"confirmed\"}!`} footer={`Total: $${orderService.totalPrice(order)}`} />\r\n                </div>\r\n            </div> :\r\n            <div className=\"order-view\">\r\n                <div className=\"order-panel\">\r\n                    <div className=\"card\">\r\n                        <h4>Order history</h4>\r\n                        {allOrders.map(o => (\r\n                            <Link key={o.id} to={orderService.routeToConfirmation(o.id)}><div>\r\n                                <hr/>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"card-title\">\r\n                                        {o.restaurant.name}\r\n                                        {o.complete ? <span className=\"badge badge-primary float-right\">Complete</span> : \r\n                                        <span className=\"badge badge-secondary float-right\">Imcomplete</span>}\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <small className=\"small text-muted\">{new Date(o.createTime).toDateString()}</small>\r\n                                        <small className=\"small\">Total: ${orderService.totalPrice(o)}</small>\r\n                                    </div>\r\n                                </div>\r\n                            </div></Link>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n    \r\nexport default OrderView;","import axios from 'axios';\r\n\r\nimport { restaurantType } from '../utils/types';\r\nimport loginService from './loginService';\r\n\r\n\r\nconst frontendURL = '/manage';\r\nconst backendURL = '/api/manage';\r\n\r\nconst addRestaurant = async (businessInfo: restaurantType) => {\r\n  const response = await axios.post(`${backendURL}/restaurants`, businessInfo, {\r\n    headers: {\r\n        Authorization: `bearer ${loginService.getToken()}`,\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n  });\r\n  return response.data;\r\n}\r\n\r\nconst manageRestaurant = async (restaurantID?: string) => {\r\n  const path = restaurantID ? `${backendURL}/restaurants/${restaurantID}` : backendURL;\r\n  const response = await axios.get(path, {\r\n    headers: {\r\n        Authorization: `bearer ${loginService.getToken()}`,\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n  });\r\n  return response.data;\r\n}\r\n\r\nconst restaurantOrders = async (restaurantID: string) => {\r\n  const response = await axios.get(`${backendURL}/restaurants/${restaurantID}/orders`, {\r\n    headers: {\r\n        Authorization: `bearer ${loginService.getToken()}`,\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n  });\r\n  return response.data;\r\n}\r\n\r\nconst updateOrderStatus = async (restaurantID: string, orderID: string, status: string) => {\r\n  const response = await axios.put(`${backendURL}/restaurants/${restaurantID}/orders/${orderID}`, {status}, {\r\n    headers: {\r\n        Authorization: `bearer ${loginService.getToken()}`,\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n  });\r\n  return response.data;\r\n}\r\n\r\nconst routeToRestaurant = (id?: string) => {\r\n  return `${frontendURL}/${id}`;\r\n}\r\n\r\nexport default { addRestaurant, manageRestaurant, restaurantOrders, updateOrderStatus, routeToRestaurant };","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { orderBEType, restaurantType } from '../utils/types';\r\nimport manageService from '../services/manageService';\r\nimport orderService from '../services/orderService';\r\nimport OrderInfoCard from './OrderInfoCard';\r\nimport PlaceInfoCard from './PlaceInfoCard';\r\nimport '../css/ManagePanel.css';\r\n\r\n\r\nfunction OrderStatusModal({order, setOrder, updateOrder}: {\r\n    order?: orderBEType,\r\n    setOrder: (arg0?: orderBEType) => void,\r\n    updateOrder: (arg0: orderBEType) => void\r\n}) {\r\n    const [ show, setShow ] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setOrder(undefined);\r\n    }\r\n    const handleUpdate = () => {\r\n        if (order?.restaurant.id && order?.id) {\r\n            manageService.updateOrderStatus(order.restaurant.id, order.id, \"complete\")\r\n                .then(res => {\r\n                    updateOrder(res);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err.response.data.error);\r\n                });\r\n        }\r\n        handleClose();\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (order) {\r\n            setShow(true);\r\n        } else {\r\n            setShow(false);\r\n        }\r\n    }, [order]);\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose} animation={false}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Order {order?.id}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div>Order is complete?</div>\r\n            </Modal.Body>\r\n            <Modal.Footer className=\"justify-content-between\">\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Cancel\r\n                </Button>\r\n                <Button variant=\"outline-primary\" onClick={handleUpdate} className=\"add-button\">\r\n                    Complete\r\n                </Button>\r\n                \r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nfunction ManagePanel({restaurants}: {restaurants: restaurantType[]}) {\r\n    const [ orders, setOrders ] = useState<orderBEType[]>([]);\r\n    const [ orderToUpdate, setOrderToUpdate ] = useState<orderBEType>();\r\n\r\n    const handleOrderStatus = (order: orderBEType) => {\r\n        setOrderToUpdate(order);\r\n    }\r\n\r\n    const updateOrder = (newOrder: orderBEType) => {\r\n        setOrders(orders.map(order => order.id === newOrder.id ? newOrder : order));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (restaurants.length == 1 && restaurants[0].id) {\r\n            manageService.restaurantOrders(restaurants[0].id)\r\n                .then(res => {\r\n                    setOrders(res);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err.response.data.error);\r\n                });\r\n        }\r\n    }, [restaurants]);\r\n\r\n    return (\r\n        <>\r\n        <div className={restaurants.length === 1 ? \"manage-panel manage-panel-4\" : \"manage-panel manage-panel-3\"}>\r\n            <div></div>\r\n            {restaurants.length !== 1 ? <div className=\"d-flex flex-wrap\">{\r\n                restaurants.map((restaurant) => (\r\n                <Link to={manageService.routeToRestaurant(restaurant.id)} key={restaurant.id} className=\"manage-restaurant-link\">\r\n                <div className=\"card manage-restaurant-card m-2\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{restaurant.name}</h5>\r\n                        <div className=\"card-text\">{restaurant.address}</div>\r\n                    </div>\r\n                </div>\r\n                </Link>\r\n            ))\r\n            }</div> : <div>\r\n                <h5>Imcomplete Orders:</h5>\r\n                <div className=\"mt-2\">\r\n                    {orders.filter(order => !order.complete).map(order => (\r\n                        <div key={order.id} className=\"card manage-order-card m-2\" onClick={()=>handleOrderStatus(order)}>\r\n                            <OrderInfoCard order={order} title={`Order ${order.id}`} footer={`$${orderService.totalPrice(order)}`} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <hr/>\r\n                <h5>Past Orders:</h5>\r\n                <div className=\"mt-2\">\r\n                    {orders.filter(order => order.complete).map(order => (\r\n                        <div key={order.id} className=\"card manage-order-card m-2\" onClick={()=>handleOrderStatus(order)}>\r\n                            <OrderInfoCard order={order} title={`Order ${order.id}`} footer={`$${orderService.totalPrice(order)}`} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>}\r\n            {restaurants.length === 1 ? <div className=\"card card-body shadow-sm mt-3\">\r\n                <PlaceInfoCard restaurant={restaurants[0]} verbose={true} />\r\n            </div> : <div></div>}\r\n        </div>\r\n        <OrderStatusModal order={orderToUpdate} setOrder={setOrderToUpdate} updateOrder={updateOrder} />\r\n    </>\r\n    );\r\n}\r\n    \r\nexport default ManagePanel;","import React, { useEffect, useState } from 'react';\r\n\r\nimport \"../css/ManageAddList.css\";\r\n\r\n\r\nfunction ManageAddList({list, setList, options, limit, message}: {\r\n        list: string[],\r\n        setList(arg: string[]): void,\r\n        options: string[],\r\n        message: string,\r\n        limit: number\r\n    }) {\r\n    const [ selected, setSelected ] = useState<string>(options.filter(opt => !list.includes(opt))[0]);\r\n\r\n    const handleAdd = () => {\r\n        setList(list.concat(selected));\r\n    }\r\n    const handleDelete = (item: string) => {\r\n        setList(list.filter(l => l != item));\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSelected(options.filter(opt => !list.includes(opt))[0]);\r\n    }, [list])\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"opt\"><h5>{message}:</h5></label>\r\n                <div className=\"mb-1\">\r\n                    {list.map(item => (\r\n                        <span className=\"badge selected-badge mx-1\" key={item}>{item}<sup className=\"selected-x\" onClick={()=>handleDelete(item)}>x</sup></span>\r\n                    ))}\r\n                </div>\r\n                <div className=\"form-inline\">\r\n                    <select className=\"form-control\" id=\"opt\"\r\n                        value={selected}\r\n                        onChange={(e) => setSelected(e.target.value)}>\r\n                        {options.filter(opt => !list.includes(opt))\r\n                                .map(opt => (\r\n                            <option key={opt}>{opt}</option>\r\n                        ))}\r\n                        <option>Other</option>\r\n                    </select>\r\n                    <button type=\"button\" className=\"btn btn-outline-primary ml-1\"\r\n                        onClick={handleAdd}\r\n                        disabled={list.length >= limit ? true : false}>Add</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n    \r\nexport default ManageAddList;","import React, { useState } from 'react';\r\n\r\nimport { menuType, menuItemType } from '../utils/types';\r\nimport \"../css/ManageAddMenu.css\";\r\n\r\n\r\nfunction ManageMenu({menu, menus, setMenus}: {\r\n        menu: menuType,\r\n        menus: menuType[],\r\n        setMenus(arg: menuType[]): void\r\n    }) {\r\n    const [ itemName, setItemName ] = useState(\"\");\r\n    const [ itemDescription, setItemDescription ] = useState(\"\");\r\n    const [ itemPrice, setItemPrice ] = useState(0);\r\n\r\n    const handleAddItem = () => {\r\n        setMenus(menus.map(m => m.name === menu.name ? {\r\n            ...menu,\r\n            items: menu.items.concat({\r\n                name: itemName,\r\n                description: itemDescription,\r\n                price: itemPrice\r\n            } as menuItemType)\r\n        } : m));\r\n        setItemName(\"\");\r\n        setItemDescription(\"\");\r\n        setItemPrice(0);\r\n    }\r\n    const handleDeleteItem = (item: menuItemType) => {\r\n        setMenus(menus.map(m => m.name === menu.name ? {\r\n            ...menu,\r\n            items: menu.items.filter(i => i.name === item.name ? false : true)\r\n        } : m));\r\n    }\r\n\r\n    return (\r\n        <div key={menu.name}>\r\n            <h5>{menu.name}</h5>\r\n            <div className=\"d-flex flex-wrap\">\r\n                {menu.items.map(item => (\r\n                    <div className=\"card menu-card\" key={item.name}>\r\n                        <div>\r\n                            <button className=\"float-right btn btn-light delete-button\" onClick={() => handleDeleteItem(item)}>x</button>\r\n                            <div>\r\n                                <span>{item.name}</span>\r\n                            </div>\r\n                            <div>\r\n                                <span>{item.description}</span>\r\n                            </div>\r\n                            <div>\r\n                                <span>${item.price}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"card menu-card\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Item name\" maxLength={40}\r\n                    value={itemName} onChange={(e) => setItemName(e.target.value)} />\r\n                <textarea className=\"form-control\" placeholder=\"Description\" rows={3}\r\n                    value={itemDescription} onChange={(e) => setItemDescription(e.target.value)} />\r\n                <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\"><span className=\"input-group-text\">$</span></div>\r\n                    <input type=\"number\" id=\"price\" className=\"form-control\" placeholder=\"Unit price\"\r\n                        value={itemPrice}\r\n                        onChange={(e) => setItemPrice(parseFloat(e.target.value))}\r\n                        min={0} step={0.01} />\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-outline-primary\"\r\n                    disabled={!(itemPrice >= 0 && itemName.length > 0)}\r\n                    onClick={handleAddItem}>\r\n                    Add Item\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction ManageAddMenu({menus, setMenus}: {\r\n        menus: menuType[],\r\n        setMenus(arg: menuType[]): void\r\n    }) {\r\n    const [ menuName, setMenuName ] = useState(\"\");\r\n    \r\n    const handleAddMenu = () => {\r\n        if (menuName !== \"\") {\r\n            setMenus(menus.concat({name: menuName, items: []} as menuType));\r\n            setMenuName(\"\");\r\n        }\r\n    }\r\n    const handleDeleteMenu = (menu: menuType) => {\r\n        setMenus(menus.filter(m => m.name === menu.name ? false : true));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"form-group\">\r\n                <div><h5>Menus:</h5></div>\r\n                {menus.map(menu => (\r\n                    <div className=\"border rounded p-2 mx-1 my-2\" key={menu.name}>\r\n                        <button className=\"float-right btn btn-light delete-button\" onClick={() => handleDeleteMenu(menu)}>x</button>\r\n                        <ManageMenu menu={menu} menus={menus} setMenus={setMenus} />\r\n                    </div>\r\n                ))}\r\n                <div className=\"form-inline\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Menu name\"\r\n                        value={menuName}\r\n                        onChange={(e)=>setMenuName(e.target.value)} />\r\n                    <button type=\"button\" className=\"btn btn-outline-primary ml-1\"\r\n                        disabled={menuName===\"\"}\r\n                        onClick={handleAddMenu}>Add Menu</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n    \r\nexport default ManageAddMenu;","import React, { FormEvent, useState } from 'react';\r\n\r\nimport ManageAddList from './ManageAddList';\r\nimport ManageAddMenu from './ManageAddMenu';\r\nimport { managerType, menuType } from '../utils/types';\r\nimport manageService from '../services/manageService';\r\n\r\n\r\nfunction ManageAddRestaurantPanel({handleAddRestaurant}: {handleAddRestaurant: (arg0: managerType)=>void}) {\r\n    const [name, setName] = useState<string>(\"\");\r\n    const [address, setAddress] = useState<string>(\"\");\r\n    const [openingTime, setOpeningTime] = useState<string[]>([\r\n        \"09:00-21:00\",\r\n        \"09:00-21:00\",\r\n        \"09:00-21:00\",\r\n        \"09:00-21:00\",\r\n        \"09:00-21:00\",\r\n        \"09:00-21:00\",\r\n        \"09:00-21:00\"\r\n    ]);\r\n    const [keywords, setKeywords] = useState<string[]>([]);\r\n    // const [parking, setParking] = useState<string[]>([]);\r\n    const [payment, setPayment] = useState<string[]>([]);\r\n    const [delivery, setDelivery] = useState(false);\r\n    const [takeaway, setTakeaway] = useState(false);\r\n    const [menus, setMenus] = useState<menuType[]>([]);\r\n    const [location, setLocation] = useState({lat: \"0\", lng: \"0\"});\r\n    \r\n    const keywordChoices = [\"Canadian\", \"Korean\", \"Chinese\", \"Indian\", \"Italian\", \"French\", \"Turkish\", \"American\", \"Mexican\", \"Japanese\", \"Thai\",\r\n    \"Vietnam\", \"Mongolian\", \"Spanish\", \"European\", \"Asian\", \"Mediterranean\", \"African\", \"Fusion\", \"Continental\", \r\n    \"Breakfast\", \"Lunch\", \"Brunch\", \"Fast food\", \"Fine dining\", \"Farm-to-table\", \"Comfort food\", \"Pub\", \"Bar\",\r\n    \"Pizza\", \"Pho\", \"BBQ\", \"Wings\", \"Steakhouse\", \"Sushi\", \"Teppanyaki\", \"Seafood\"];\r\n    const paymentChoices = [\"Visa\", \"MasterCard\", \"AMEX\", \"Discover\"];\r\n    // const parkingChoices = [\"Complimentary parking\", \"Public parking\", \"Street parking\", \"Underground parking\", \"Valet parking\"];\r\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];    \r\n\r\n    const deconstructTime = (timestr: string) => {\r\n        const [open, close] = timestr.split(\"-\");\r\n        return [...open.split(\":\"), ...close.split(\":\")];\r\n    }\r\n    const handleOpenTime = (day: number, newTime: string, slot: number) => {\r\n        const hours = [...openingTime];\r\n        const deconArray = deconstructTime(hours[day]);\r\n        deconArray[slot] = `0${newTime}`.slice(-2);\r\n        hours[day] = `${deconArray[0]}:${deconArray[1]}-${deconArray[2]}:${deconArray[3]}`;\r\n        setOpeningTime(hours);\r\n    }\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLElement>) => {\r\n        e.preventDefault();\r\n        manageService.addRestaurant({\r\n            name,\r\n            address,\r\n            opening_time: openingTime,\r\n            keywords,\r\n            payment,\r\n            delivery,\r\n            takeaway,\r\n            menus,\r\n            location: {lat: parseFloat(location.lat), lng: parseFloat(location.lng)}\r\n        })\r\n            .then(res => {\r\n                handleAddRestaurant(res);\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response.data.error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"restaurantName\"><h5>Restaurant Name:</h5></label>\r\n                <input type=\"text\" className=\"form-control\" id=\"restaurantName\" placeholder=\"Restaurant Name\"\r\n                    onChange={(e)=>setName(e.target.value)} />\r\n            </div><hr/>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"restaurantAddress\"><h5>Restaurant Address:</h5></label>\r\n                <input type=\"text\" className=\"form-control\" id=\"restaurantAddress\" placeholder=\"Address\"\r\n                    onChange={(e)=>setAddress(e.target.value)} />\r\n            </div><hr/>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"restaurantAddress\"><h5>Restaurant Location:</h5></label>\r\n                <div className=\"form-inline\" id=\"restaurantAddress\">\r\n                    <label htmlFor=\"restaurantLatitude\">Latitude:</label>\r\n                    <input type=\"number\" className=\"form-control\" id=\"restaurantLatitude\" placeholder=\"Latitude\"\r\n                        value={location.lat}\r\n                        onChange={(e)=>setLocation({lat: e.target.value, lng: location.lng})} />\r\n                    <label htmlFor=\"restaurantLongitude\">Longitude:</label>\r\n                    <input type=\"number\" className=\"form-control\" id=\"restaurantLongitude\" placeholder=\"Longitude\"\r\n                        value={location.lng}\r\n                        onChange={(e)=>setLocation({lat: location.lat, lng: e.target.value})} />\r\n                </div>\r\n            </div><hr/>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"openTime\"><h5>Opening Time:</h5></label>\r\n                <div id=\"openTime\">\r\n                    {days.map((s, d) => (\r\n                        <div key={s}>\r\n                            <div className=\"form-row\">\r\n                                <label htmlFor={`${s}-ch`} className=\"col-1\">{s}:</label>\r\n                                <input type=\"number\" className=\"form-control col-1\" id={`${s}-ch`}\r\n                                    min={0} max={23} step={1} value={deconstructTime(openingTime[d])[0]}\r\n                                    onChange={(e)=>handleOpenTime(d, e.target.value, 0)} />\r\n                                <label htmlFor={`${s}-om`} className=\"mx-1\">:</label>\r\n                                <input type=\"number\" className=\"form-control col-1\" id={`${s}-om`}\r\n                                    min={0} max={59} step={1} value={deconstructTime(openingTime[d])[1]}\r\n                                    onChange={(e)=>handleOpenTime(d, e.target.value, 1)} />\r\n                                <label htmlFor={`${s}-ch`} className=\"mx-1\">to</label>\r\n                                <input type=\"number\" className=\"form-control col-1\" id={`${s}-ch`}\r\n                                    min={0} max={23} step={1} value={deconstructTime(openingTime[d])[2]}\r\n                                    onChange={(e)=>handleOpenTime(d, e.target.value, 2)} />\r\n                                <label htmlFor={`${s}-cm`} className=\"mx-1\">:</label>\r\n                                <input type=\"number\" className=\"form-control col-1\" id={`${s}-cm`}\r\n                                    min={0} max={59} step={1} value={deconstructTime(openingTime[d])[3]}\r\n                                    onChange={(e)=>handleOpenTime(d, e.target.value, 3)} />\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div><hr/>\r\n            <ManageAddList list={keywords} setList={setKeywords} options={keywordChoices} limit={5} message={\"Select up to 5 keywords:\"} /><hr/>\r\n            <ManageAddList list={payment} setList={setPayment} options={paymentChoices} limit={4} message={\"Select up to 4 payment methods:\"} /><hr/>\r\n            {/* <ManageAddList list={parking} setList={setParking} options={parkingChoices} limit={5} message={\"Select up to 5 parking options:\"} /><hr/> */}\r\n            <div className=\"form-check-label\"><h5>Delivery methods:</h5></div>\r\n            <div>\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"delivery\" onChange={(e)=>setDelivery(e.target.checked)} />\r\n                    <label className=\"form-check-label\" htmlFor=\"delivery\">Delivery</label>\r\n                </div>\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"takeaway\" onChange={(e)=>setTakeaway(e.target.checked)} />\r\n                    <label className=\"form-check-label\" htmlFor=\"takeaway\">Takeaway</label>\r\n                </div>\r\n            </div><hr/>\r\n            <ManageAddMenu menus={menus} setMenus={setMenus} /><hr/>\r\n            <button type=\"submit\" className=\"btn btn-primary my-1\">Submit</button>\r\n        </form>\r\n    )\r\n}\r\n    \r\nexport default ManageAddRestaurantPanel;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { managerType } from '../utils/types';\r\nimport ManagePanel from \"./ManagePanel\";\r\nimport ManageAddRestaurantPanel from \"./ManageAddRestaurantPanel\";\r\nimport manageService from '../services/manageService';\r\nimport '../css/ManageView.css';\r\n\r\n\r\nfunction ManageView() {\r\n    const [ manager, setManager ] = useState<managerType>({username: \"\", name: \"\", restaurants:[]} as managerType);\r\n    const [ adding, setAdding ] = useState(false);\r\n    const { placeID }: { placeID:string } = useParams();\r\n    \r\n    useEffect(()=>{\r\n        if (placeID) {\r\n            manageService.manageRestaurant(placeID)\r\n                .then(res => {\r\n                    setManager(res);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err.response.data.error);\r\n                });\r\n        } else {\r\n            manageService.manageRestaurant()\r\n                .then(res => {\r\n                    setManager(res);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err.response.data.error);\r\n                });\r\n        }\r\n        \r\n    }, [placeID]);\r\n\r\n    const handleAddRestaurant = (updatedManager: managerType) => {\r\n        setManager(updatedManager);\r\n        setAdding(false);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"business-view p-3\">\r\n            <h1 className=\"font-weight-bold\">My Restaurants</h1>\r\n            {adding ? <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => setAdding(false)}>Cancel</button> :\r\n                      <button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => setAdding(true)}>Add a restaurant</button>}\r\n            <hr/>\r\n            {adding ? <ManageAddRestaurantPanel handleAddRestaurant={handleAddRestaurant}/> : \r\n                      <ManagePanel restaurants={manager.restaurants}/>}\r\n        </div>\r\n    )\r\n}\r\n    \r\nexport default ManageView;","import React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport loginService from '../services/loginService';\r\n\r\n\r\nfunction LogoutView({setLoginToken}: {setLoginToken: (arg0: string|null)=>void}) {\r\n    useEffect(()=>{\r\n        setLoginToken(null);\r\n        loginService.logout();\r\n    }, []);\r\n    \r\n    return (\r\n        <Redirect to=\"/\"/>\r\n    )\r\n}\r\n    \r\nexport default LogoutView;","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Link, Redirect\n} from \"react-router-dom\";\n\nimport LoginView from './components/LoginView';\nimport RegisterView from './components/RegisterView';\nimport SearchPanel from './components/SearchPanel';\nimport SearchView from './components/SearchView';\nimport PlaceView from './components/PlaceView';\nimport OrderView from './components/OrderView';\nimport ManageView from './components/ManageView';\nimport loginService from './services/loginService';\nimport LogoutView from './components/LogoutView';\nimport './css/App.css';\n\n\nfunction App() {\n  const [ loginToken, setLoginToken ] = useState<string|null>(loginService.getToken());\n\n  return (\n    <div>\n      <Router>\n      <header className=\"app-header d-flex justify-content-between\">\n        <ul className=\"nav\">\n          <li className=\"nav-item\">\n            <Link to=\"/\" className=\"mx-1\">Home</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/order\" className=\"mx-1\">My Orders</Link>\n          </li>\n        </ul>\n        {loginToken ? <ul className=\"nav\">\n          <li className=\"nav-item\">\n            <Link to=\"/manage\" className=\"mx-1\">My Restaurants</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/logout\" className=\"mx-1\">Logout</Link>\n          </li>\n        </ul> : \n        <ul className=\"nav\">\n          <li className=\"nav-item\">\n            <Link to=\"/login\" className=\"mx-1\">login</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/register\" className=\"mx-1\">register</Link>\n          </li>\n        </ul>}\n        \n\n      </header>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <SearchPanel />\n          </Route>\n          <Route path=\"/search\">\n            <SearchView />\n          </Route>\n          <Route path=\"/order/:orderID?\">\n            <OrderView />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterView />\n          </Route>\n          <Route path=\"/login\">\n            {loginToken ? <Redirect to=\"/manage\"/> : <LoginView setLoginToken={setLoginToken}/>}\n          </Route>\n          <Route path=\"/manage/:placeID?\">\n            {loginToken ? <ManageView /> : <Redirect to=\"/login\"/>}\n          </Route>\n          <Route path=\"/logout\">\n            {loginToken ? <LogoutView  setLoginToken={setLoginToken}/> : <Redirect to=\"/\"/>}\n          </Route>\n          <Route path=\"/place/:placeID\">\n            <PlaceView />\n          </Route>\n        </Switch>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers  } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport modalReducer from './reducers/modalReducer';\nimport orderReducer from './reducers/orderReducer';\nimport reportWebVitals from './reportWebVitals';\nimport './css/index.css';\n\n\nconst store = createStore(combineReducers({\n    modal: modalReducer,\n    order: orderReducer,\n}));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}